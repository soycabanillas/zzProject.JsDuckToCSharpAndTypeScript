{
  "tagname": "class",
  "name": "Ext.Class",
  "autodetected": {
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
      "linenr": 25
    }
  ],
  "doc": "<p>Handles class creation throughout the framework. This is a low level factory that is used by <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a> and generally\nshould not be used directly. If you choose to use <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> you will lose out on the namespace, aliasing and depency loading\nfeatures made available by <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>. The only time you would use <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> directly is to create an anonymous class.</p>\n\n<p>If you wish to create a class you should use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> which aliases\n<a href=\"#!/api/Ext.ClassManager-method-create\" rel=\"Ext.ClassManager-method-create\" class=\"docClass\">Ext.ClassManager.create</a> to enable namespacing and dynamic dependency resolution.</p>\n\n<p><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> is the factory and <strong>not</strong> the superclass of everything. For the base class that <strong>all</strong> Ext classes inherit\nfrom, see <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>.</p>\n",
  "author": [
    {
      "tagname": "author",
      "name": "Jacky Nguyen",
      "email": "jacky@sencha.com"
    }
  ],
  "docauthor": [
    {
      "tagname": "docauthor",
      "name": "Jacky Nguyen",
      "email": "jacky@sencha.com"
    }
  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "alias",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/ClassManager.js",
          "linenr": 1205
        }
      ],
      "doc": "<p>List of short aliases for class names.  Most useful for defining xtypes for widgets:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.CoolPanel', {\n    extend: '<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>',\n    alias: ['widget.coolpanel'],\n    title: 'Yeah!'\n});\n\n// Using <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('widget.coolpanel');\n\n// Using the shorthand for defining widgets by xtype\n<a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('panel', {\n    items: [\n        {xtype: 'coolpanel', html: 'Foo'},\n        {xtype: 'coolpanel', html: 'Bar'}\n    ]\n});\n</code></pre>\n\n<p>Besides \"widget\" for xtype there are alias namespaces like \"feature\" for ftype and \"plugin\" for ptype.</p>\n",
      "type": "String[]",
      "default": null,
      "properties": null,
      "owner": "Ext.Class",
      "id": "cfg-alias",
      "short_doc": "List of short aliases for class names. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "alternateClassName",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/ClassManager.js",
          "linenr": 1277
        }
      ],
      "doc": "<p>Defines alternate names for this class.  For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Developer', {\n    alternateClassName: ['Coder', 'Hacker'],\n    code: function(msg) {\n        alert('Typing... ' + msg);\n    }\n});\n\nvar joe = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Developer');\njoe.code('stackoverflow');\n\nvar rms = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Hacker');\nrms.code('hack hack');\n</code></pre>\n",
      "type": "String/String[]",
      "default": null,
      "properties": null,
      "owner": "Ext.Class",
      "id": "cfg-alternateClassName",
      "short_doc": "Defines alternate names for this class. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "config",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 469
        }
      ],
      "doc": "<p>List of configuration options with their default values, for which automatically\naccessor methods are generated.  For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('SmartPhone', {\n     config: {\n         hasTouchScreen: false,\n         operatingSystem: 'Other',\n         price: 500\n     },\n     constructor: function(cfg) {\n         this.initConfig(cfg);\n     }\n});\n\nvar iPhone = new SmartPhone({\n     hasTouchScreen: true,\n     operatingSystem: 'iOS'\n});\n\niPhone.getPrice(); // 500;\niPhone.getOperatingSystem(); // 'iOS'\niPhone.getHasTouchScreen(); // true;\n</code></pre>\n\n<p>NOTE for when configs are reference types, the getter and setter methods do not make copies.</p>\n\n<p>For example, when a config value is set, the reference is stored on the instance. All instances that set\nthe same reference type will share it.</p>\n\n<p>In the case of the getter, the value with either come from the prototype if the setter was never called or from\nthe instance as the last value passed to the setter.</p>\n\n<p>For some config properties, the value passed to the setter is transformed prior to being stored on the instance.</p>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-config",
      "owner": "Ext.Class",
      "short_doc": "List of configuration options with their default values, for which automatically\naccessor methods are generated. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "extend",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 369
        }
      ],
      "doc": "<p>The parent class that this class extends. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Person', {\n    say: function(text) { alert(text); }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Developer', {\n    extend: 'Person',\n    say: function(text) { this.callParent([\"print \"+text]); }\n});\n</code></pre>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-extend",
      "owner": "Ext.Class",
      "short_doc": "The parent class that this class extends. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "inheritableStatics",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 452
        }
      ],
      "doc": "<p>List of inheritable static methods for this class.\nOtherwise just like <a href=\"#!/api/Ext.Class-cfg-statics\" rel=\"Ext.Class-cfg-statics\" class=\"docClass\">statics</a> but subclasses inherit these methods.</p>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-inheritableStatics",
      "owner": "Ext.Class",
      "short_doc": "List of inheritable static methods for this class. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "mixins",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 602
        }
      ],
      "doc": "<p>List of classes to mix into this class. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('CanSing', {\n     sing: function() {\n         alert(\"I'm on the highway to hell...\")\n     }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Musician', {\n     mixins: ['CanSing']\n})\n</code></pre>\n\n<p>In this case the Musician class will get a <code>sing</code> method from CanSing mixin.</p>\n\n<p>But what if the Musician already has a <code>sing</code> method? Or you want to mix\nin two classes, both of which define <code>sing</code>?  In such a cases it's good\nto define mixins as an object, where you assign a name to each mixin:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Musician', {\n     mixins: {\n         canSing: 'CanSing'\n     },\n\n     sing: function() {\n         // delegate singing operation to mixin\n         this.mixins.canSing.sing.call(this);\n     }\n})\n</code></pre>\n\n<p>In this case the <code>sing</code> method of Musician will overwrite the\nmixed in <code>sing</code> method. But you can access the original mixed in method\nthrough special <code>mixins</code> property.</p>\n",
      "type": "String[]/Object",
      "default": null,
      "properties": null,
      "id": "cfg-mixins",
      "owner": "Ext.Class",
      "short_doc": "List of classes to mix into this class. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "requires",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Loader.js",
          "linenr": 1319
        }
      ],
      "doc": "<p>List of classes that have to be loaded before instantiating this class.\nFor example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Mother', {\n    requires: ['Child'],\n    giveBirth: function() {\n        // we can be sure that child class is available.\n        return new Child();\n    }\n});\n</code></pre>\n",
      "type": "String[]",
      "default": null,
      "properties": null,
      "owner": "Ext.Class",
      "id": "cfg-requires",
      "short_doc": "List of classes that have to be loaded before instantiating this class. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "singleton",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/ClassManager.js",
          "linenr": 1247
        }
      ],
      "doc": "<p>When set to true, the class will be instantiated as singleton.  For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Logger', {\n    singleton: true,\n    log: function(msg) {\n        console.log(msg);\n    }\n});\n\nLogger.log('Hello');\n</code></pre>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "owner": "Ext.Class",
      "id": "cfg-singleton",
      "short_doc": "When set to true, the class will be instantiated as singleton. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "statics",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 423
        }
      ],
      "doc": "<p>List of static methods for this class. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Computer', {\n     statics: {\n         factory: function(brand) {\n             // 'this' in static methods refer to the class itself\n             return new this(brand);\n         }\n     },\n\n     constructor: function() { ... }\n});\n\nvar dellComputer = Computer.factory('Dell');\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-statics",
      "owner": "Ext.Class",
      "short_doc": "List of static methods for this class. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "uses",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Loader.js",
          "linenr": 1489
        }
      ],
      "doc": "<p>List of optional classes to load together with this class. These aren't neccessarily loaded before\nthis class is created, but are guaranteed to be available before <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a> listeners are\ninvoked. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Mother', {\n    uses: ['Child'],\n    giveBirth: function() {\n        // This code might, or might not work:\n        // return new Child();\n\n        // Instead use <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>() to load the class at the spot if not loaded already:\n        return <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Child');\n    }\n});\n</code></pre>\n",
      "type": "String[]",
      "default": null,
      "properties": null,
      "owner": "Ext.Class",
      "id": "cfg-uses",
      "short_doc": "List of optional classes to load together with this class. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "property",
      "name": "defaultPreprocessors",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 265
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-defaultPreprocessors",
      "owner": "Ext.Class",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "preprocessors",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 199
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-preprocessors",
      "owner": "Ext.Class",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "method",
      "name": "constructor",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 69
        }
      ],
      "doc": "<p>Create a new anonymous class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object represent the properties of this class</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "onCreated",
          "doc": "<p>Optional, the callback function to be executed when this class is fully created.\nNote that the creation process can be asynchronous depending on the pre-processors used.</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>The newly created class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "id": "method-constructor",
      "owner": "Ext.Class",
      "short_doc": "Create a new anonymous class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 115
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "Class",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-create",
      "owner": "Ext.Class",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getPreprocessors",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 258
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getPreprocessors",
      "owner": "Ext.Class",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onBeforeCreated",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 98
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "Class",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "hooks",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onBeforeCreated",
      "owner": "Ext.Class",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "process",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 137
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "Class",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "onCreated",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "doProcess"
      ],
      "id": "method-process",
      "owner": "Ext.Class",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getDefaultPreprocessors",
      "autodetected": {
        "inheritdoc": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 270
        }
      ],
      "doc": "<p>Retrieve the array stack of default pre-processors</p>\n",
      "return": {
        "type": "Function[]",
        "name": "return",
        "doc": "<p>defaultPreprocessors</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>[]"
      },
      "private": true,
      "static": true,
      "inheritdoc": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getDefaultPreprocessors",
      "owner": "Ext.Class",
      "short_doc": "Retrieve the array stack of default pre-processors ..."
    },
    {
      "tagname": "method",
      "name": "getPreprocessor",
      "autodetected": {
        "inheritdoc": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 246
        }
      ],
      "doc": "<p>Retrieve a pre-processor callback function by its name, which has been registered before</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Function",
        "name": "return",
        "doc": "<p>preprocessor</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
      },
      "private": true,
      "static": true,
      "inheritdoc": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getPreprocessor",
      "owner": "Ext.Class",
      "short_doc": "Retrieve a pre-processor callback function by its name, which has been registered before ..."
    },
    {
      "tagname": "method",
      "name": "registerPreprocessor",
      "autodetected": {
        "inheritdoc": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 202
        }
      ],
      "doc": "<p>Register a new pre-processor to be used during the class creation process</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "doc": "<p>The pre-processor's name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The callback function to be executed. Typical format:</p>\n\n<pre><code>function(cls, data, fn) {\n    // Your code here\n\n    // Execute this when the processing is finished.\n    // Asynchronous processing is perfectly ok\n    if (fn) {\n        fn.call(this, cls, data);\n    }\n});\n</code></pre>\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Function",
              "name": "cls",
              "doc": "<p>The created class</p>\n",
              "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
            },
            {
              "tagname": "params",
              "type": "Object",
              "name": "data",
              "doc": "<p>The set of properties passed in <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> constructor</p>\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Function",
              "name": "fn",
              "doc": "<p>The callback function that <strong>must</strong> to be executed when this\npre-processor finishes, regardless of whether the processing is synchronous or aynchronous.</p>\n",
              "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        }
      ],
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "private": true,
      "static": true,
      "inheritdoc": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "setDefaultPreprocessorPosition"
      ],
      "id": "static-method-registerPreprocessor",
      "owner": "Ext.Class",
      "short_doc": "Register a new pre-processor to be used during the class creation process ..."
    },
    {
      "tagname": "method",
      "name": "setDefaultPreprocessorPosition",
      "autodetected": {
        "inheritdoc": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 294
        }
      ],
      "doc": "<p>Insert this pre-processor at a specific position in the stack, optionally relative to\nany existing pre-processor. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Class-static-method-registerPreprocessor\" rel=\"Ext.Class-static-method-registerPreprocessor\" class=\"docClass\">Ext.Class.registerPreprocessor</a>('debug', function(cls, data, fn) {\n    // Your code here\n\n    if (fn) {\n        fn.call(this, cls, data);\n    }\n}).setDefaultPreprocessorPosition('debug', 'last');\n</code></pre>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "doc": "<p>The pre-processor name. Note that it needs to be registered with\n<a href=\"#!/api/Ext.Class-static-method-registerPreprocessor\" rel=\"Ext.Class-static-method-registerPreprocessor\" class=\"docClass\">registerPreprocessor</a> before this</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "offset",
          "doc": "<p>The insertion position. Four possible values are:\n'first', 'last', or: 'before', 'after' (relative to the name provided in the third argument)</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "relativeName",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "static": true,
      "inheritdoc": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-setDefaultPreprocessorPosition",
      "owner": "Ext.Class",
      "short_doc": "Insert this pre-processor at a specific position in the stack, optionally relative to\nany existing pre-processor. ..."
    },
    {
      "tagname": "method",
      "name": "setDefaultPreprocessors",
      "autodetected": {
        "inheritdoc": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Class.js",
          "linenr": 280
        }
      ],
      "doc": "<p>Set the default array stack of default pre-processors</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array",
          "name": "preprocessors",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "static": true,
      "inheritdoc": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-setDefaultPreprocessors",
      "owner": "Ext.Class",
      "short_doc": "Set the default array stack of default pre-processors ..."
    }
  ],
  "alternateClassNames": [

  ],
  "aliases": {
  },
  "id": "class-Ext.Class",
  "short_doc": "Handles class creation throughout the framework. ..."
}