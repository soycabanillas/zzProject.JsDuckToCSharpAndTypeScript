{
  "tagname": "class",
  "name": "Ext.chart.Label",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
      "linenr": 21
    }
  ],
  "doc": "<p>Labels is a mixin to the Series class. Labels methods are implemented\nin each of the Series (Pie, Bar, etc) for label creation and placement.</p>\n\n<p>The 2 methods that must be implemented by the Series are:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext.chart.Label-method-onCreateLabel\" rel=\"Ext.chart.Label-method-onCreateLabel\" class=\"docClass\">onCreateLabel</a></li>\n<li><a href=\"#!/api/Ext.chart.Label-method-onPlaceLabel\" rel=\"Ext.chart.Label-method-onPlaceLabel\" class=\"docClass\">onPlaceLabel</a></li>\n</ul>\n\n\n<p>The application can override these methods to control the style and\nlocation of the labels. For instance, to display the labels in green and\nadd a '+' symbol when the value of a Line series exceeds 50:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.chart.series.MyLine', {\n     extend: '<a href=\"#!/api/Ext.chart.series.Line\" rel=\"Ext.chart.series.Line\" class=\"docClass\">Ext.chart.series.Line</a>',\n     alias: ['series.myline', 'Ext.chart.series.MyLine'],\n     type: 'MYLINE',\n\n     onPlaceLabel: function(label, storeItem, item, i, display, animate){\n         if (storeItem.data.y &gt;= 50) {\n             label.setAttributes({\n                 fill: '#080',\n                 text: \"+\" + storeItem.data.y\n             }, true);\n         }\n         return this.callParent(arguments);\n     }\n });\n</code></pre>\n\n<p>Note that for simple effects, like the example above, it is simpler\nfor the application to provide a label.renderer function in the config:</p>\n\n<pre><code>  label: {\n      renderer: function(value, label, storeItem, item, i, display, animate, index) {\n          if (value &gt;= 50) {\n              label.setAttributes({fill:'#080'});\n              value = \"+\" + value;\n          }\n          return value;\n      }\n  }\n</code></pre>\n\n<p>The rule of thumb is that to customize the value and modify simple visual attributes, it\nis simpler to use a renderer function, while overridding <code>onCreateLabel</code> and <code>onPlaceLabel</code>\nallows the application to take entire control over the labels.</p>\n",
  "aliases": {
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.Base",
  "mixins": [

  ],
  "requires": [
    "Ext.draw.Color"
  ],
  "uses": [

  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "label",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 124
        }
      ],
      "doc": "<p>Object with the following properties:</p>\n",
      "type": "Object",
      "default": null,
      "properties": [
        {
          "tagname": "cfg",
          "type": "String",
          "name": "display",
          "doc": "<p>Specifies the presence and position of the labels. The possible values depend on the chart type.\nFor Line and Scatter charts: \"under\" | \"over\" | \"rotate\".\nFor Bar and Column charts: \"insideStart\" | \"insideEnd\" | \"outside\".\nFor Pie charts: \"outside\" | \"rotate\".\nFor all charts: \"none\" hides the labels and \"middle\" is reserved for future use.\nOn stacked Bar and stacked Column charts, if 'stackedDisplay' is set, the values\n\"over\" or \"under\" can be passed internally to <a href=\"#!/api/Ext.chart.Label-method-onCreateLabel\" rel=\"Ext.chart.Label-method-onCreateLabel\" class=\"docClass\">onCreateLabel</a> and <a href=\"#!/api/Ext.chart.Label-method-onPlaceLabel\" rel=\"Ext.chart.Label-method-onPlaceLabel\" class=\"docClass\">onPlaceLabel</a>\n(however they cannot be used by the application as config values for label.display).</p>\n\n<p>Default value: 'none'.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "cfg",
          "type": "String",
          "name": "stackedDisplay",
          "doc": "<p>The type of label we want to display as a summary on a stacked\nbar or a stacked column.  If set to 'total', the total amount\nof all the stacked values is displayed on top of the column.\nIf set to 'balances', the total amount of the positive values\nis displayed on top of the column and the total amount of the\nnegative values is displayed at the bottom.</p>\n\n<p>Default value: 'none'.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "cfg",
          "type": "String",
          "name": "color",
          "doc": "<p>The color of the label text.</p>\n\n<p>Default value: '#000' (black).</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "cfg",
          "type": "Boolean",
          "name": "contrast",
          "doc": "<p>True to render the label in contrasting color with the backround of a column\nin a Bar chart or of a slice in a Pie chart. The label color should be specified\nin hex values (eg. '#f00' or '#ff0000'), not as a CSS color name (eg. 'red').</p>\n\n<p>Default value: false.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "cfg",
          "type": "String|String[]",
          "name": "field",
          "doc": "<p>The name(s) of the field(s) to be displayed in the labels. If your chart has 3 series\nthat correspond to the fields 'a', 'b', and 'c' of your model and you only want to\ndisplay labels for the series 'c', you must still provide an array <code>[null, null, 'c']</code>.</p>\n\n<p>Default value: 'name'.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        },
        {
          "tagname": "cfg",
          "type": "Number",
          "name": "minMargin",
          "doc": "<p>Specifies the minimum distance from a label to the origin of\nthe visualization.  This parameter is useful when using\nPieSeries width variable pie slice lengths.</p>\n\n<p>Default value: 50.</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "cfg",
          "type": "String",
          "name": "font",
          "doc": "<p>The font used for the labels.</p>\n\n<p>Default value: <code>\"11px Helvetica, sans-serif\"</code>.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "cfg",
          "type": "String",
          "name": "orientation",
          "doc": "<p>Either \"horizontal\" or \"vertical\".</p>\n\n<p>Default value: <code>\"horizontal\"</code>.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "cfg",
          "type": "Function",
          "name": "renderer",
          "doc": "<p>Optional function for formatting the label into a displayable value.</p>\n\n<p>The arguments to the method are:</p>\n\n<ul>\n<li><em><code>value</code></em> The value</li>\n<li><p><em><code>label</code></em>, <em><code>storeItem</code></em>, <em><code>item</code></em>, <em><code>i</code></em>, <em><code>display</code></em>, <em><code>animate</code></em>, <em><code>index</code></em></p>\n\n<p>Same arguments as <a href=\"#!/api/Ext.chart.Label-method-onPlaceLabel\" rel=\"Ext.chart.Label-method-onPlaceLabel\" class=\"docClass\">onPlaceLabel</a>.</p>\n\n<p>Default value: <code>function(v) { return v; }</code></p></li>\n</ul>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        }
      ],
      "id": "cfg-label",
      "owner": "Ext.chart.Label",
      "short_doc": "Object with the following properties: ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "colorStringRe",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 208
        }
      ],
      "doc": "<p>a regex to parse url type colors.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "RegExp",
      "default": "/url\\s*\\(\\s*#([^\\/)]+)\\s*\\)/",
      "readonly": null,
      "id": "property-colorStringRe",
      "owner": "Ext.chart.Label",
      "short_doc": "a regex to parse url type colors. ...",
      "html_type": "<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "constructor",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 211
        }
      ],
      "doc": "<p>the mixin constructor. Used internally by Series.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-constructor",
      "owner": "Ext.chart.Label",
      "return": {
        "type": "Ext.chart.Label",
        "doc": "\n",
        "html_type": "<a href=\"#!/api/Ext.chart.Label\" rel=\"Ext.chart.Label\" class=\"docClass\">Ext.chart.Label</a>"
      },
      "short_doc": "the mixin constructor. ..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1261
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-destroy",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.util.ElementContainer",
          "link": "<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"
        },
        {
          "name": "destroy",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>"
        },
        {
          "name": "destroy",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>"
        }
      ],
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "hideLabels",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 406
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 406,
      "params": [
        {
          "name": "hides",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hideLabels",
      "owner": "Ext.chart.Label",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onCreateLabel",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 76
        }
      ],
      "doc": "<p>Called each time a new label is created.</p>\n\n<p><strong>Note:</strong> This method must be implemented in Series that mixes\nin this Label mixin.</p>\n",
      "template": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.Model",
          "name": "storeItem",
          "doc": "<p>The element of the store that is\nrelated to the sprite.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "item",
          "doc": "<p>The item related to the sprite.\nAn item is an object containing the position of the shape\nused to describe the visualization and also pointing to the\nactual shape (circle, rectangle, path, etc).</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "i",
          "doc": "<p>The index of the element created\n(i.e the first created label, second created label, etc).</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "display",
          "doc": "<p>The label.display type.\nMay be <code>false</code> if the label is hidden</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>The created sprite that will draw the label.</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "id": "method-onCreateLabel",
      "owner": "Ext.chart.Label",
      "short_doc": "Called each time a new label is created. ..."
    },
    {
      "tagname": "method",
      "name": "onPlaceLabel",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 98
        }
      ],
      "doc": "<p>Called for updating the position of the label.</p>\n\n<p><strong>Note:</strong> This method must be implemented in Series that mixes\nin this Label mixin.</p>\n",
      "template": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.draw.Sprite",
          "name": "label",
          "doc": "<p>The sprite that draws the label.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.Model",
          "name": "storeItem",
          "doc": "<p>The element of the store\nthat is related to the sprite.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "item",
          "doc": "<p>The item related to the\nsprite. An item is an object containing the position of\nthe shape used to describe the visualization and also\npointing to the actual shape (circle, rectangle, path, etc).</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "i",
          "doc": "<p>The index of the element to be updated\n(i.e. whether it is the first, second, third from the\nlabelGroup)</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "display",
          "doc": "<p>The label.display type.\nMay be <code>false</code> if the label is hidden</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "animate",
          "doc": "<p>A boolean value to set or unset\nanimations for the labels.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "<p>The series index.</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        }
      ],
      "id": "method-onPlaceLabel",
      "owner": "Ext.chart.Label",
      "short_doc": "Called for updating the position of the label. ..."
    },
    {
      "tagname": "method",
      "name": "renderLabels",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/chart/Label.js",
          "linenr": 231
        }
      ],
      "doc": "<p>a method to render all labels in the labelGroup</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "hideLabels",
        "onCreateLabel",
        "onPlaceLabel"
      ],
      "id": "method-renderLabels",
      "owner": "Ext.chart.Label",
      "short_doc": "a method to render all labels in the labelGroup ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.chart.Label",
  "short_doc": "Labels is a mixin to the Series class. ..."
}