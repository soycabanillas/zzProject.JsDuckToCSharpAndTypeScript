{
  "tagname": "class",
  "name": "Ext.data.NodeInterface",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
      "linenr": 21
    }
  ],
  "doc": "<p>This class is used as a set of methods that are applied to the prototype of a\nModel to decorate it with a Node API. This means that models used in conjunction with a tree\nwill have all of the tree related methods available on the model. In general this class will\nnot be used directly by the developer. This class also creates extra fields on the model if\nthey do not exist, to help maintain the tree state and UI. These fields are documented as\nconfig options.</p>\n",
  "aliases": {
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.Base",
  "mixins": [

  ],
  "requires": [
    "Ext.data.Field",
    "Ext.data.writer.Json"
  ],
  "uses": [

  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "allowDrag",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 107
        }
      ],
      "doc": "<p>Set to false to deny dragging of this node.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "id": "cfg-allowDrag",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Set to false to deny dragging of this node. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "allowDrop",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 102
        }
      ],
      "doc": "<p>Set to false to deny dropping on this node.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "id": "cfg-allowDrop",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Set to false to deny dropping on this node. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "checked",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 61
        }
      ],
      "doc": "<p>Set to true or false to show a checkbox alongside this node.</p>\n",
      "type": "Boolean",
      "default": "null",
      "properties": null,
      "id": "cfg-checked",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Set to true or false to show a checkbox alongside this node. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "children",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 152
        }
      ],
      "doc": "<p>Array of child nodes.</p>\n",
      "type": "Ext.data.NodeInterface[]",
      "default": null,
      "properties": null,
      "id": "cfg-children",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "cls",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 72
        }
      ],
      "doc": "<p>CSS class to apply for this node.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-cls",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "depth",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 46
        }
      ],
      "doc": "<p>The number of parents this node has. A root node has depth 0, a child of it depth 1, and so on...</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-depth",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "The number of parents this node has. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "expandable",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 56
        }
      ],
      "doc": "<p>Set to true to allow for expanding/collapsing of this node.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-expandable",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Set to true to allow for expanding/collapsing of this node. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "expanded",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 51
        }
      ],
      "doc": "<p>True if the node is expanded.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-expanded",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "True if the node is expanded. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "href",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 122
        }
      ],
      "doc": "<p>An URL for a link that's created when this config is specified.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-href",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "hrefTarget",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 127
        }
      ],
      "doc": "<p>Target for link. Only applicable when <a href=\"#!/api/Ext.data.NodeInterface-cfg-href\" rel=\"Ext.data.NodeInterface-cfg-href\" class=\"docClass\">href</a> also specified.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-hrefTarget",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Target for link. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "icon",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 82
        }
      ],
      "doc": "<p>URL for this node's icon.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-icon",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "iconCls",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 77
        }
      ],
      "doc": "<p>CSS class to apply for this node's icon.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-iconCls",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "index",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 40
        }
      ],
      "doc": "<p>The position of the node inside its parent. When parent has 4 children and the node is third amongst them,\nindex will be 2.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-index",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "The position of the node inside its parent. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "isFirst",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 97
        }
      ],
      "doc": "<p>True if this is the first node.</p>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "id": "cfg-isFirst",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "isLast",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 92
        }
      ],
      "doc": "<p>True if this is the last node.</p>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "id": "cfg-isLast",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "leaf",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 66
        }
      ],
      "doc": "<p>Set to true to indicate that this child can have no children. The expand icon/arrow will then not be\nrendered for this node.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-leaf",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Set to true to indicate that this child can have no children. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "loaded",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 112
        }
      ],
      "doc": "<p>True if the node has finished loading.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-loaded",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "True if the node has finished loading. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "loading",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 117
        }
      ],
      "doc": "<p>True if the node is currently loading.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-loading",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "True if the node is currently loading. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "parentId",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 35
        }
      ],
      "doc": "<p>ID of parent node.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-parentId",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "qshowDelay",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 142
        }
      ],
      "doc": "<p>Tooltip showDelay.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-qshowDelay",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "qtip",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 132
        }
      ],
      "doc": "<p>Tooltip text to show on this node.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-qtip",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "qtitle",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 137
        }
      ],
      "doc": "<p>Tooltip title.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-qtitle",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "root",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 87
        }
      ],
      "doc": "<p>True if this is the root node.</p>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "id": "cfg-root",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "text",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 147
        }
      ],
      "doc": "<p>The text to show on node label.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-text",
      "owner": "Ext.data.NodeInterface",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "childNodes",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 183
        }
      ],
      "doc": "<p>An array of this nodes children.  Array will be empty if this node has no chidren.</p>\n",
      "type": "Ext.data.NodeInterface[]",
      "default": null,
      "properties": null,
      "id": "property-childNodes",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "An array of this nodes children. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "firstChild",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 178
        }
      ],
      "doc": "<p>A reference to this node's first child node. <code>null</code> if this node has no children.</p>\n",
      "type": "Ext.data.NodeInterface",
      "default": null,
      "properties": null,
      "id": "property-firstChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "A reference to this node's first child node. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isNode",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 278
        }
      ],
      "doc": "<p><code>true</code> in this class to identify an object as an instantiated Node, or subclass thereof.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-isNode",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "true in this class to identify an object as an instantiated Node, or subclass thereof. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "lastChild",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 173
        }
      ],
      "doc": "<p>A reference to this node's last child node. <code>null</code> if this node has no children.</p>\n",
      "type": "Ext.data.NodeInterface",
      "default": null,
      "properties": null,
      "id": "property-lastChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "A reference to this node's last child node. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
    },
    {
      "tagname": "property",
      "name": "nextSibling",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 158
        }
      ],
      "doc": "<p>A reference to this node's next sibling node. <code>null</code> if this node does not have a next sibling.</p>\n",
      "type": "Ext.data.NodeInterface",
      "default": null,
      "properties": null,
      "id": "property-nextSibling",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "A reference to this node's next sibling node. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
    },
    {
      "tagname": "property",
      "name": "parentNode",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 168
        }
      ],
      "doc": "<p>A reference to this node's parent node. <code>null</code> if this node is the root node.</p>\n",
      "type": "Ext.data.NodeInterface",
      "default": null,
      "properties": null,
      "id": "property-parentNode",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "A reference to this node's parent node. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
    },
    {
      "tagname": "property",
      "name": "previousSibling",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 163
        }
      ],
      "doc": "<p>A reference to this node's previous sibling node. <code>null</code> if this node does not have a previous sibling.</p>\n",
      "type": "Ext.data.NodeInterface",
      "default": null,
      "properties": null,
      "id": "property-previousSibling",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "A reference to this node's previous sibling node. ...",
      "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "appendChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 527
        }
      ],
      "doc": "<p>Inserts node(s) as the last child node of this node.</p>\n\n<p>If the node was previously a child node of another parent node, it will be removed from that node first.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface/Ext.data.NodeInterface[]/Object",
          "name": "node",
          "doc": "<p>The node or Array of nodes to append</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "suppressEvents",
          "default": "false",
          "optional": true,
          "doc": "<p>True to suppress firering of events.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "commit",
          "default": "false",
          "optional": true,
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The appended node if single append, or null if an array was passed</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "appendChild",
        "callStore",
        "createNode",
        "fireEventArgs",
        "getId",
        "isLoaded",
        "set",
        "setFirstChild",
        "setLastChild",
        "triggerUIUpdate"
      ],
      "id": "method-appendChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Inserts node(s) as the last child node of this node. ..."
    },
    {
      "tagname": "method",
      "name": "bubble",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1117
        }
      ],
      "doc": "<p>Bubbles up the tree from this node, calling the specified function with each node. The arguments to the function\nwill be the args provided or the current node. If the function returns false at any point,\nthe bubble is stopped.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The function to call</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (this reference) in which the function is executed. Defaults to the current Node.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "args",
          "optional": true,
          "doc": "<p>The args to call the function with. Defaults to passing the current Node.</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-bubble",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Bubbles up the tree from this node, calling the specified function with each node. ..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "cascadeBy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1144
        }
      ],
      "doc": "<p>Cascades down the tree from this node, calling the specified function with each node. The arguments to the function\nwill be the args provided or the current node. If the function returns false at any point,\nthe cascade is stopped on that branch.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The function to call</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (this reference) in which the function is executed. Defaults to the current Node.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "args",
          "optional": true,
          "doc": "<p>The args to call the function with. Defaults to passing the current Node.</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-cascadeBy",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Cascades down the tree from this node, calling the specified function with each node. ..."
    },
    {
      "tagname": "method",
      "name": "clear",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 793
        }
      ],
      "doc": "<p>Clears the node.</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "destroy",
          "default": "false",
          "optional": true,
          "doc": "<p>True to destroy the node.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-clear",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Clears the node. ..."
    },
    {
      "tagname": "method",
      "name": "collapse",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1443
        }
      ],
      "doc": "<p>Collapse this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "recursive",
          "default": "false",
          "optional": true,
          "doc": "<p>True to recursively collapse all the children</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "callback",
          "optional": true,
          "doc": "<p>The function to execute once the collapse completes</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope to run the callback in</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs",
        "isExpanded",
        "isLeaf",
        "set"
      ],
      "id": "method-collapse",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Collapse this node. ..."
    },
    {
      "tagname": "method",
      "name": "collapseChildren",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1546
        }
      ],
      "doc": "<p>Collapse all the children of this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "recursive",
          "default": "false",
          "optional": true,
          "doc": "<p>True to recursively collapse all the children</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "callback",
          "optional": true,
          "doc": "<p>The function to execute once all the children are collapsed</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope to run the callback in</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-collapseChildren",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Collapse all the children of this node. ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "contains",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1225
        }
      ],
      "doc": "<p>Returns true if this node is an ancestor (at any point) of the passed node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-contains",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is an ancestor (at any point) of the passed node. ..."
    },
    {
      "tagname": "method",
      "name": "copy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 771
        }
      ],
      "doc": "<p>Creates a copy (clone) of this Node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "id",
          "optional": true,
          "doc": "<p>A new id, defaults to this Node's id.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "deep",
          "default": "false",
          "optional": true,
          "doc": "<p>True to recursively copy all child Nodes into the new Node.\nFalse to copy without child Nodes.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>A copy of this Node.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent"
      ],
      "id": "method-copy",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Creates a copy (clone) of this Node. ..."
    },
    {
      "tagname": "method",
      "name": "createNode",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 381
        }
      ],
      "doc": "<p>Ensures that the passed object is an instance of a Record with the NodeInterface applied</p>\n",
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "node",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-createNode",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Ensures that the passed object is an instance of a Record with the NodeInterface applied ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 808
        }
      ],
      "doc": "<p>Destroys the node.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "silent",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent",
        "clear",
        "remove"
      ],
      "id": "method-destroy",
      "owner": "Ext.data.NodeInterface",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.Base",
          "link": "<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"
        }
      ],
      "short_doc": "Destroys the node. ..."
    },
    {
      "tagname": "method",
      "name": "eachChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1164
        }
      ],
      "doc": "<p>Interates the child nodes of this node, calling the specified function with each node. The arguments to the function\nwill be the args provided or the current node. If the function returns false at any point,\nthe iteration stops.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The function to call</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (this reference) in which the function is executed. Defaults to the current Node in iteration.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "args",
          "optional": true,
          "doc": "<p>The args to call the function with. Defaults to passing the current Node.</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-eachChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Interates the child nodes of this node, calling the specified function with each node. ..."
    },
    {
      "tagname": "method",
      "name": "expand",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1340
        }
      ],
      "doc": "<p>Expand this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "recursive",
          "default": "false",
          "optional": true,
          "doc": "<p>True to recursively expand all the children</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "callback",
          "optional": true,
          "doc": "<p>The function to execute once the expand completes</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope to run the callback in</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "expand",
        "expandChildren",
        "fireEventArgs",
        "getOwnerTree",
        "isExpanded",
        "isLeaf",
        "isLoading",
        "on"
      ],
      "id": "method-expand",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Expand this node. ..."
    },
    {
      "tagname": "method",
      "name": "expandChildren",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1412
        }
      ],
      "doc": "<p>Expand all the children of this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "recursive",
          "default": "false",
          "optional": true,
          "doc": "<p>True to recursively expand all the children</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "callback",
          "optional": true,
          "doc": "<p>The function to execute once all the children are expanded</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope to run the callback in</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-expandChildren",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Expand all the children of this node. ..."
    },
    {
      "tagname": "method",
      "name": "findChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1184
        }
      ],
      "doc": "<p>Finds the first child that has the attribute with the specified value.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "attribute",
          "doc": "<p>The attribute name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "value",
          "doc": "<p>The value to search for</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "deep",
          "default": "false",
          "optional": true,
          "doc": "<p>True to search through nodes deeper than the immediate children</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The found child or null if none was found</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "findChildBy",
        "get"
      ],
      "id": "method-findChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Finds the first child that has the attribute with the specified value. ..."
    },
    {
      "tagname": "method",
      "name": "findChildBy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1197
        }
      ],
      "doc": "<p>Finds the first child by a custom function. The child matches if the function passed returns true.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>A function which must return true if the passed Node is the required Node.</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (this reference) in which the function is executed. Defaults to the Node being tested.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "deep",
          "default": "false",
          "optional": true,
          "doc": "<p>True to search through nodes deeper than the immediate children</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The found child or null if none was found</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-findChildBy",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Finds the first child by a custom function. ..."
    },
    {
      "tagname": "method",
      "name": "getChildAt",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1039
        }
      ],
      "doc": "<p>Returns the child node at the specified index.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getChildAt",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns the child node at the specified index. ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getDepth",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1109
        }
      ],
      "doc": "<p>Returns depth of this node (the root node has a depth of 0)</p>\n",
      "return": {
        "type": "Number",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-getDepth",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns depth of this node (the root node has a depth of 0) ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "getOwnerTree",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 640
        }
      ],
      "doc": "<p>Returns the tree this node is in.</p>\n",
      "return": {
        "type": "Ext.tree.Panel",
        "name": "return",
        "doc": "<p>The tree panel which owns this node.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getOwnerTree",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns the tree this node is in. ..."
    },
    {
      "tagname": "method",
      "name": "getPath",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1089
        }
      ],
      "doc": "<p>Gets the hierarchical path from the root of the current node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "field",
          "optional": true,
          "doc": "<p>The field to construct the path from. Defaults to the model idProperty.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "separator",
          "default": "\"/\"",
          "optional": true,
          "doc": "<p>A separator to use.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>The node path</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-getPath",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Gets the hierarchical path from the root of the current node. ..."
    },
    {
      "tagname": "method",
      "name": "hasChildNodes",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 499
        }
      ],
      "doc": "<p>Returns true if this node has one or more child nodes, else false.</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "isLeaf"
      ],
      "id": "method-hasChildNodes",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node has one or more child nodes, else false. ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "indexOf",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1062
        }
      ],
      "doc": "<p>Returns the index of a child node</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Number",
        "name": "return",
        "doc": "<p>The index of the node or -1 if it was not found</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-indexOf",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns the index of a child node ..."
    },
    {
      "tagname": "method",
      "name": "indexOfId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1071
        }
      ],
      "doc": "<p>Returns the index of a child node that matches the id</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "id",
          "doc": "<p>The id of the node to find</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Number",
        "name": "return",
        "doc": "<p>The index of the node or -1 if it was not found</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-indexOfId",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns the index of a child node that matches the id ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "insertBefore",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 841
        }
      ],
      "doc": "<p>Inserts the first node before the second node in this nodes childNodes collection.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The node to insert</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "refNode",
          "doc": "<p>The node to insert before (if null the node is appended)</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The inserted node</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "appendChild",
        "createNode",
        "fireEventArgs",
        "getId",
        "indexOf",
        "isLoaded",
        "set",
        "setFirstChild",
        "triggerUIUpdate"
      ],
      "id": "method-insertBefore",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Inserts the first node before the second node in this nodes childNodes collection. ..."
    },
    {
      "tagname": "method",
      "name": "insertChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 940
        }
      ],
      "doc": "<p>Inserts a node into this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "<p>The zero-based index to insert the node at</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The node to insert</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The node you just inserted</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "appendChild",
        "insertBefore"
      ],
      "id": "method-insertChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Inserts a node into this node. ..."
    },
    {
      "tagname": "method",
      "name": "isAncestor",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1234
        }
      ],
      "doc": "<p>Returns true if the passed node is an ancestor (at any point) of this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-isAncestor",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if the passed node is an ancestor (at any point) of this node. ..."
    },
    {
      "tagname": "method",
      "name": "isExpandable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 507
        }
      ],
      "doc": "<p>Returns true if this node has one or more child nodes, or if the <tt>expandable</tt>\nnode attribute is explicitly specified as true, otherwise returns false.</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get",
        "hasChildNodes",
        "isLeaf",
        "isLoaded"
      ],
      "id": "method-isExpandable",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node has one or more child nodes, or if the expandable\nnode attribute is explicitly specified as..."
    },
    {
      "tagname": "method",
      "name": "isExpanded",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1290
        }
      ],
      "doc": "<p>Returns true if this node is expaned</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isExpanded",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is expaned ..."
    },
    {
      "tagname": "method",
      "name": "isFirst",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 491
        }
      ],
      "doc": "<p>Returns true if this node is the first child of its parent</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isFirst",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is the first child of its parent ..."
    },
    {
      "tagname": "method",
      "name": "isLast",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 483
        }
      ],
      "doc": "<p>Returns true if this node is the last child of its parent</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isLast",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is the last child of its parent ..."
    },
    {
      "tagname": "method",
      "name": "isLeaf",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 399
        }
      ],
      "doc": "<p>Returns true if this node is a leaf</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isLeaf",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is a leaf ..."
    },
    {
      "tagname": "method",
      "name": "isLoaded",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1298
        }
      ],
      "doc": "<p>Returns true if this node is loaded</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isLoaded",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is loaded ..."
    },
    {
      "tagname": "method",
      "name": "isLoading",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1306
        }
      ],
      "doc": "<p>Returns true if this node is loading</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "get"
      ],
      "id": "method-isLoading",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is loading ..."
    },
    {
      "tagname": "method",
      "name": "isRoot",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1314
        }
      ],
      "doc": "<p>Returns true if this node is the root node</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-isRoot",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is the root node ..."
    },
    {
      "tagname": "method",
      "name": "isVisible",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1322
        }
      ],
      "doc": "<p>Returns true if this node is visible. Note that visibility refers to\nthe structure of the tree, the <a href=\"#!/api/Ext.tree.Panel-cfg-rootVisible\" rel=\"Ext.tree.Panel-cfg-rootVisible\" class=\"docClass\">Ext.tree.Panel.rootVisible</a>\nconfiguration is not taken into account here. If this method is called\non the root node, it will always be visible.</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-isVisible",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Returns true if this node is visible. ..."
    },
    {
      "tagname": "method",
      "name": "onChildNodesAvailable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1383
        }
      ],
      "doc": "<p>Called as a callback from the beforeexpand listener fired by <a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a> when the child nodes have been loaded and appended.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "records",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "recursive",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "callback",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "expandChildren",
        "fireEventArgs",
        "getOwnerTree",
        "set"
      ],
      "id": "method-onChildNodesAvailable",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Called as a callback from the beforeexpand listener fired by expand when the child nodes have been loaded and appended. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "remove",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 956
        }
      ],
      "doc": "<p>Removes this node from its parent</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "destroy",
          "default": "false",
          "optional": true,
          "doc": "<p>True to destroy the node upon removal.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": [

      ],
      "method_calls": [
        "destroy"
      ],
      "id": "method-remove",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Removes this node from its parent ..."
    },
    {
      "tagname": "method",
      "name": "removeAll",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 974
        }
      ],
      "doc": "<p>Removes all child nodes from this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "destroy",
          "default": "false",
          "optional": true,
          "doc": "<p>True to destroy the node upon removal.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs",
        "triggerUIUpdate"
      ],
      "id": "method-removeAll",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Removes all child nodes from this node. ..."
    },
    {
      "tagname": "method",
      "name": "removeChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 664
        }
      ],
      "doc": "<p>Removes a child node from this node.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The node to remove</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "destroy",
          "default": "false",
          "optional": true,
          "doc": "<p>True to destroy the node upon removal.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The removed node</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs",
        "indexOf",
        "setFirstChild",
        "setLastChild",
        "triggerUIUpdate"
      ],
      "id": "method-removeChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Removes a child node from this node. ..."
    },
    {
      "tagname": "method",
      "name": "replaceChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1048
        }
      ],
      "doc": "<p>Replaces one child node in this node with another.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "newChild",
          "doc": "<p>The replacement node</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "oldChild",
          "doc": "<p>The node to replace</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "return": {
        "type": "Ext.data.NodeInterface",
        "name": "return",
        "doc": "<p>The replaced node</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "insertBefore",
        "removeChild"
      ],
      "id": "method-replaceChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Replaces one child node in this node with another. ..."
    },
    {
      "tagname": "method",
      "name": "serialize",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1618
        }
      ],
      "doc": "<p>Creates an object representation of this node including its children.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-serialize",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Creates an object representation of this node including its children. ..."
    },
    {
      "tagname": "method",
      "name": "setCollapsed",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1515
        }
      ],
      "doc": "<p>Sets the node into the collapsed state without affecting the UI.</p>\n\n<p>This is called when a node is collapsed with the recursive flag. All the descendant\nnodes will have been removed from the store, but descendant non-leaf nodes still\nneed to be set to the collapsed state without affecting the UI.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "recursive",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs",
        "isLeaf"
      ],
      "id": "method-setCollapsed",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Sets the node into the collapsed state without affecting the UI. ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "setFirstChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 407
        }
      ],
      "doc": "<p>Sets the first child of this node</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setFirstChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Sets the first child of this node ..."
    },
    {
      "tagname": "method",
      "name": "setLastChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 416
        }
      ],
      "doc": "<p>Sets the last child of this node</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setLastChild",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Sets the last child of this node ..."
    },
    {
      "tagname": "method",
      "name": "sort",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 1250
        }
      ],
      "doc": "<p>Sorts this nodes children using the supplied sort function.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>A function which, when passed two Nodes, returns -1, 0 or 1 depending upon required sort order.</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "recursive",
          "default": "false",
          "optional": true,
          "doc": "<p>True to apply this sort recursively</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "suppressEvent",
          "default": "false",
          "optional": true,
          "doc": "<p>True to not fire a sort event.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs",
        "setFirstChild",
        "setLastChild"
      ],
      "id": "method-sort",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Sorts this nodes children using the supplied sort function. ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "updateInfo",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 425
        }
      ],
      "doc": "<p>Updates general data of this node like isFirst, isLast, depth. This\nmethod is internally called after a node is moved. This shouldn't\nhave to be called by the developer unless they are creating custom\nTree plugins.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "commit",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "info",
          "doc": "<p>The info to update. May contain any of the following</p>\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Object",
              "name": "isFirst",
              "doc": "\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Object",
              "name": "isLast",
              "doc": "\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Object",
              "name": "index",
              "doc": "\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Object",
              "name": "depth",
              "doc": "\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Object",
              "name": "parentId",
              "doc": "\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "commit",
        "isEqual"
      ],
      "id": "method-updateInfo",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Updates general data of this node like isFirst, isLast, depth. ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "applyFields",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 243
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": true,
      "private": true,
      "inheritable": null,
      "linenr": 243,
      "params": [
        {
          "name": "modelClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "addFields",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-applyFields",
      "owner": "Ext.data.NodeInterface",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "decorate",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 189
        }
      ],
      "doc": "<p>This method allows you to decorate a Model's class to implement the NodeInterface.\nThis adds a set of methods, new events, new properties and new fields on every Record.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Class/Ext.data.Model",
          "name": "modelClass",
          "doc": "<p>The Model class or an instance of the Model class you want to\ndecorate the prototype of.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"
        }
      ],
      "static": true,
      "inheritdoc": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "applyFields",
        "getPrototypeBody"
      ],
      "id": "static-method-decorate",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "This method allows you to decorate a Model's class to implement the NodeInterface. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "getPrototypeBody",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 259
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": true,
      "private": true,
      "inheritable": null,
      "linenr": 259,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "afterEdit",
        "appendChild",
        "callParent",
        "callStore",
        "clear",
        "collapse",
        "commit",
        "createNode",
        "destroy",
        "expand",
        "expandChildren",
        "findChildBy",
        "fireEventArgs",
        "get",
        "getId",
        "getOwnerTree",
        "hasChildNodes",
        "indexOf",
        "insertBefore",
        "isAncestor",
        "isEqual",
        "isExpanded",
        "isLeaf",
        "isLoaded",
        "isLoading",
        "on",
        "remove",
        "removeAll",
        "removeChild",
        "set",
        "setFirstChild",
        "setLastChild",
        "triggerUIUpdate",
        "updateInfo"
      ],
      "id": "static-method-getPrototypeBody",
      "owner": "Ext.data.NodeInterface",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "event",
      "name": "append",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 292
        }
      ],
      "doc": "<p>Fires when a new child node is appended</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The newly appended node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "<p>The index of the newly appended node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-append",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when a new child node is appended ..."
    },
    {
      "tagname": "event",
      "name": "beforeappend",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 323
        }
      ],
      "doc": "<p>Fires before a new child is appended, return false to cancel the append.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The child node to be appended</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforeappend",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before a new child is appended, return false to cancel the append. ..."
    },
    {
      "tagname": "event",
      "name": "beforecollapse",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 368
        }
      ],
      "doc": "<p>Fires before this node is collapsed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>The collapsing node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforecollapse",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before this node is collapsed. ..."
    },
    {
      "tagname": "event",
      "name": "beforeexpand",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 363
        }
      ],
      "doc": "<p>Fires before this node is expanded.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>The expanding node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforeexpand",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before this node is expanded. ..."
    },
    {
      "tagname": "event",
      "name": "beforeinsert",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 346
        }
      ],
      "doc": "<p>Fires before a new child is inserted, return false to cancel the insert.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The child node to be inserted</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "refNode",
          "doc": "<p>The child node the node is being inserted before</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforeinsert",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before a new child is inserted, return false to cancel the insert. ..."
    },
    {
      "tagname": "event",
      "name": "beforemove",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 338
        }
      ],
      "doc": "<p>Fires before this node is moved to a new location in the tree. Return false to cancel the move.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "oldParent",
          "doc": "<p>The parent of this node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "newParent",
          "doc": "<p>The new parent this node is moving to</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "<p>The index it is being moved to</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforemove",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before this node is moved to a new location in the tree. ..."
    },
    {
      "tagname": "event",
      "name": "beforeremove",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 329
        }
      ],
      "doc": "<p>Fires before a child is removed, return false to cancel the remove.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The child node to be removed</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "isMove",
          "doc": "<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforeremove",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires before a child is removed, return false to cancel the remove. ..."
    },
    {
      "tagname": "event",
      "name": "collapse",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 358
        }
      ],
      "doc": "<p>Fires when this node is collapsed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>The collapsing node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-collapse",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when this node is collapsed. ..."
    },
    {
      "tagname": "event",
      "name": "expand",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 353
        }
      ],
      "doc": "<p>Fires when this node is expanded.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>The expanding node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-expand",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when this node is expanded. ..."
    },
    {
      "tagname": "event",
      "name": "insert",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 316
        }
      ],
      "doc": "<p>Fires when a new child node is inserted.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The child node inserted</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "refNode",
          "doc": "<p>The child node the node was inserted before</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-insert",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when a new child node is inserted. ..."
    },
    {
      "tagname": "event",
      "name": "move",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 308
        }
      ],
      "doc": "<p>Fires when this node is moved to a new location in the tree</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "oldParent",
          "doc": "<p>The old parent of this node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "newParent",
          "doc": "<p>The new parent of this node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "index",
          "doc": "<p>The index it was moved to</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-move",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when this node is moved to a new location in the tree ..."
    },
    {
      "tagname": "event",
      "name": "remove",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 299
        }
      ],
      "doc": "<p>Fires when a child node is removed</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "node",
          "doc": "<p>The removed node</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "isMove",
          "doc": "<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-remove",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when a child node is removed ..."
    },
    {
      "tagname": "event",
      "name": "sort",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/data/NodeInterface.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Fires when this node's childNodes are sorted.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface",
          "name": "this",
          "doc": "<p>This node.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.NodeInterface[]",
          "name": "childNodes",
          "doc": "<p>The childNodes of this node.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-sort",
      "owner": "Ext.data.NodeInterface",
      "short_doc": "Fires when this node's childNodes are sorted. ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.data.NodeInterface",
  "short_doc": "This class is used as a set of methods that are applied to the prototype of a\nModel to decorate it with a Node API. ..."
}