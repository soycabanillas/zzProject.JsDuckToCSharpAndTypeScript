{
  "tagname": "class",
  "name": "Ext.direct.RemotingProvider",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
      "linenr": 21
    }
  ],
  "doc": "<p>The <a href=\"#!/api/Ext.direct.RemotingProvider\" rel=\"Ext.direct.RemotingProvider\" class=\"docClass\">RemotingProvider</a> exposes access to\nserver side methods on the client (a remote procedure call (RPC) type of\nconnection where the client can initiate a procedure on the server).</p>\n\n<p>This allows for code to be organized in a fashion that is maintainable,\nwhile providing a clear path between client and server, something that is\nnot always apparent when using URLs.</p>\n\n<p>To accomplish this the server-side needs to describe what classes and methods\nare available on the client-side. This configuration will typically be\noutputted by the server-side <a href=\"#!/api/Ext.direct.Manager\" rel=\"Ext.direct.Manager\" class=\"docClass\">Ext.Direct</a> stack when the API description is built.</p>\n",
  "aliases": {
    "direct": [
      "remotingprovider"
    ]
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.direct.JsonProvider",
  "mixins": [

  ],
  "requires": [
    "Ext.util.MixedCollection",
    "Ext.util.DelayedTask",
    "Ext.direct.Transaction",
    "Ext.direct.RemotingMethod"
  ],
  "uses": [

  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "actions",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 45
        }
      ],
      "doc": "<p>Object literal defining the server side actions and methods. For example, if\nthe Provider is configured with:</p>\n\n<pre><code> // each property within the 'actions' object represents a server side Class\n actions: {\n     TestAction: [   // array of methods within each server side Class to be   \n     {               // stubbed out on client\n         name: 'doEcho',   // stub method will be TestAction.doEcho\n         len:  1            \n     }, {\n         name: 'multiply', // name of method\n         len:  2           // The number of parameters that will be used to create an\n                           // array of data to send to the server side function.\n     }, {\n         name: 'doForm',\n         formHandler: true // tells the client that this method handles form calls\n     }],\n\n     // These methods will be created in nested namespace TestAction.Foo\n     'TestAction.Foo': [{\n         name: 'ordered',  // stub method will be TestAction.Foo.ordered\n         len:  1\n     }, {\n         name: 'noParams', // this method does not accept any parameters\n         len:  0\n     }, {\n         name: 'named',    // stub method will be TestAction.Foo.named\n         params: ['foo', 'bar']    // parameters are passed by name\n     }]\n }\n</code></pre>\n\n<p>Note that starting with 4.2, dotted Action names will generate nested objects.\nIf you wish to reverse to previous behavior, set <a href=\"#!/api/Ext.direct.RemotingProvider-cfg-disableNestedActions\" rel=\"Ext.direct.RemotingProvider-cfg-disableNestedActions\" class=\"docClass\">disableNestedActions</a>\nto <code>true</code>.</p>\n\n<p>In the following example a <em>client side</em> handler is used to call the\nserver side method \"multiply\" in the server-side \"TestAction\" Class:</p>\n\n<pre><code> TestAction.multiply(\n     // pass two arguments to server, so specify len=2\n     2, 4,\n\n     // callback function after the server is called\n     //  result: the result returned by the server\n     //       e: <a href=\"#!/api/Ext.direct.RemotingEvent\" rel=\"Ext.direct.RemotingEvent\" class=\"docClass\">Ext.direct.RemotingEvent</a> object\n     // success: true or false\n     // options: options to be applied to method call and passed to callback\n     function (result, e, success, options) {\n         var t, action, method;\n\n         t = e.getTransaction();\n         action = t.action; // server side Class called\n         method = t.method; // server side method called\n\n         if (e.status) {\n             var answer = <a href=\"#!/api/Ext-method-encode\" rel=\"Ext-method-encode\" class=\"docClass\">Ext.encode</a>(result); // 8\n         }\n         else {\n             var msg = e.message; // failure message\n         }\n     },\n\n     // Scope to call the callback in (optional)\n     window,\n\n     // Options to apply to this method call. This can include\n     // Ajax.request() options; only `timeout` is supported at this time.\n     // When timeout is set for a method call, it will be executed immediately\n     // without buffering.\n     // The same options object is passed to the callback so it's possible\n     // to \"forward\" some data when needed.\n     {\n         timeout: 60000, // milliseconds\n         foo: 'bar'\n     }\n );\n</code></pre>\n\n<p>In the example above, the server side \"multiply\" function will be passed two\narguments (2 and 4). The \"multiply\" method should return the value 8 which will be\navailable as the <code>result</code> in the callback example above.</p>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-actions",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Object literal defining the server side actions and methods. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "disableNestedActions",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 130
        }
      ],
      "doc": "<p>In versions prior to 4.2, using dotted Action names was not really meaningful,\nbecause it generated flat <a href=\"#!/api/Ext.direct.RemotingProvider-cfg-namespace\" rel=\"Ext.direct.RemotingProvider-cfg-namespace\" class=\"docClass\">namespace</a> object with dotted property names.\nFor example, take this API declaration:</p>\n\n<pre><code> {\n     actions: {\n         TestAction: {\n             name: 'foo',\n             len:  1\n         },\n         'TestAction.Foo' {\n             name: 'bar',\n             len: 1\n         }\n     },\n     namespace: 'MyApp'\n }\n</code></pre>\n\n<p>Before 4.2, that would generate the following API object:</p>\n\n<pre><code> window.MyApp = {\n     TestAction: {\n         foo: function() { ... }\n     },\n     'TestAction.Foo': {\n         bar: function() { ... }\n     }\n }\n</code></pre>\n\n<p>In Ext JS 4.2, we introduced new namespace handling behavior. Now the same API object\nwill be like this:</p>\n\n<pre><code> window.MyApp = {\n     TestAction: {\n         foo: function() { ... },\n\n         Foo: {\n             bar: function() { ... }\n         }\n     }\n }\n</code></pre>\n\n<p>Instead of addressing Action methods array-style <code>MyApp['TestAction.Foo'].bar()</code>,\nnow it is possible to use object addressing: <code>MyApp.TestAction.Foo.bar()</code>.</p>\n\n<p>If you find this behavior undesirable, set this config option to <code>true</code>.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "id": "cfg-disableNestedActions",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "In versions prior to 4.2, using dotted Action names was not really meaningful,\nbecause it generated flat namespace ob...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "enableBuffer",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 200
        }
      ],
      "doc": "<p><code>true</code> or <code>false</code> to enable or disable combining of method\ncalls. If a number is specified this is the amount of time in milliseconds\nto wait before sending a batched request.</p>\n\n<p>Calls which are received within the specified timeframe will be\nconcatenated together and sent in a single request, optimizing the\napplication by reducing the amount of round trips that have to be made\nto the server. To cancel buffering for some particular invocations, pass\n<code>timeout</code> parameter in <code>options</code> object for that method call.</p>\n",
      "type": "Number/Boolean",
      "default": "10",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-enableBuffer",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "true or false to enable or disable combining of method\ncalls. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "enableUrlEncode",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 194
        }
      ],
      "doc": "<p>Specify which param will hold the arguments for the method.</p>\n",
      "type": "String",
      "default": "data",
      "properties": null,
      "id": "cfg-enableUrlEncode",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Specify which param will hold the arguments for the method. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "id",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 45
        }
      ],
      "doc": "<p>The unique id of the provider (defaults to an <a href=\"#!/api/Ext-method-id\" rel=\"Ext-method-id\" class=\"docClass\">auto-assigned id</a>).\nYou should assign an id if you need to be able to access the provider later and you do\nnot have an object reference available, for example:</p>\n\n<pre><code> <a href=\"#!/api/Ext.direct.Manager-method-addProvider\" rel=\"Ext.direct.Manager-method-addProvider\" class=\"docClass\">Ext.direct.Manager.addProvider</a>({\n     type: 'polling',\n     url:  'php/poll.php',\n     id:   'poll-provider'\n });\n var p = <a href=\"#!/api/Ext.direct.Manager\" rel=\"Ext.direct.Manager\" class=\"docClass\">Ext.direct.Manager</a>.<a href=\"#!/api/Ext.direct.Manager-method-getProvider\" rel=\"Ext.direct.Manager-method-getProvider\" class=\"docClass\">getProvider</a>('poll-provider');\np.disconnect();\n</code></pre>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-id",
      "owner": "Ext.direct.Provider",
      "short_doc": "The unique id of the provider (defaults to an auto-assigned id). ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "listeners",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 197
        }
      ],
      "doc": "<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-listeners",
      "owner": "Ext.util.Observable",
      "short_doc": "A config object containing one or more event handlers to be added to this object during initialization. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "maxRetries",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 215
        }
      ],
      "doc": "<p>Number of times to re-attempt delivery on failure of a call.</p>\n",
      "type": "Number",
      "default": "1",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-maxRetries",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Number of times to re-attempt delivery on failure of a call. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "namespace",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 180
        }
      ],
      "doc": "<p>Namespace for the Remoting Provider (defaults to <code>Ext.global</code>).\nExplicitly specify the namespace Object, or specify a String to have a\n<a href=\"#!/api/Ext-method-namespace\" rel=\"Ext-method-namespace\" class=\"docClass\">namespace</a> created implicitly.</p>\n",
      "type": "String/Object",
      "default": null,
      "properties": null,
      "id": "cfg-namespace",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Namespace for the Remoting Provider (defaults to Ext.global). ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "relayedEvents",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 61
        }
      ],
      "doc": "<p>List of Provider events that should be relayed by <a href=\"#!/api/Ext.direct.Manager\" rel=\"Ext.direct.Manager\" class=\"docClass\">Ext.direct.Manager</a>.\n'data' event is always relayed.</p>\n",
      "type": "String[]",
      "default": null,
      "properties": null,
      "id": "cfg-relayedEvents",
      "owner": "Ext.direct.Provider",
      "short_doc": "List of Provider events that should be relayed by Ext.direct.Manager. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "timeout",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 222
        }
      ],
      "doc": "<p>The timeout to use for each request.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-timeout",
      "owner": "Ext.direct.RemotingProvider",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "url",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 188
        }
      ],
      "doc": "<p><strong>Required</strong>. The url to connect to the <a href=\"#!/api/Ext.direct.Manager\" rel=\"Ext.direct.Manager\" class=\"docClass\">Ext.direct.Manager</a> server-side router.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-url",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Required. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "eventsSuspended",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 237
        }
      ],
      "doc": "<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Number",
      "default": "0",
      "readonly": null,
      "id": "property-eventsSuspended",
      "owner": "Ext.util.Observable",
      "short_doc": "Initial suspended call count. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "hasListeners",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 243
        }
      ],
      "doc": "<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "readonly": true,
      "id": "property-hasListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "This object holds a key for any event that has a listener. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isObservable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 231
        }
      ],
      "doc": "<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-isObservable",
      "owner": "Ext.util.Observable",
      "short_doc": "true in this class to identify an object as an instantiated Observable, or subclass thereof. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isProvider",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 43
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 43,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isProvider",
      "owner": "Ext.direct.Provider",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "addEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 800
        }
      ],
      "doc": "<p>Adds the specified events to the list of events which this Observable may fire.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object/String...",
          "name": "eventNames",
          "doc": "<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-addEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Adds the specified events to the list of events which this Observable may fire. ..."
    },
    {
      "tagname": "method",
      "name": "addListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 502
        }
      ],
      "doc": "<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "eventName",
          "doc": "<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Object",
              "name": "scope",
              "doc": "<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "delay",
              "doc": "<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "single",
              "doc": "<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "buffer",
              "doc": "<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Ext.util.Observable",
              "name": "target",
              "doc": "<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
            },
            {
              "tagname": "params",
              "type": "String",
              "name": "element",
              "doc": "<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "destroyable",
              "default": "false",
              "optional": true,
              "doc": "<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "priority",
              "optional": true,
              "doc": "<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addListener"
      ],
      "id": "method-addListener",
      "owner": "Ext.util.Observable",
      "overrides": [
        {
          "name": "addListener",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>"
        }
      ],
      "short_doc": "Appends an event handler to this object. ..."
    },
    {
      "tagname": "method",
      "name": "addManagedListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 295
        }
      ],
      "doc": "<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item to which to add a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addManagedListener"
      ],
      "id": "method-addManagedListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "captureArgs",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 127
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "o",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-captureArgs",
      "owner": "Ext.util.Observable",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "clearListeners",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 729
        }
      ],
      "doc": "<p>Removes all listeners for this object including the managed listeners</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "clearManagedListeners"
      ],
      "id": "method-clearListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes all listeners for this object including the managed listeners ..."
    },
    {
      "tagname": "method",
      "name": "clearManagedListeners",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 760
        }
      ],
      "doc": "<p>Removes all managed listeners for this object.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeManagedListenerItem"
      ],
      "id": "method-clearManagedListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes all managed listeners for this object. ..."
    },
    {
      "tagname": "method",
      "name": "combineAndSend",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 671
        }
      ],
      "doc": "<p>Combine any buffered requests and send them off</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "sendRequest"
      ],
      "id": "method-combineAndSend",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Combine any buffered requests and send them off ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "configureFormRequest",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 687
        }
      ],
      "doc": "<p>Configure a form submission request</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "action",
          "doc": "<p>The action being executed</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "method",
          "doc": "<p>The method being executed</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "form",
          "doc": "<p>The form being submitted</p>\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "callback",
          "optional": true,
          "doc": "<p>A callback to run after the form submits</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>A scope to execute the callback in</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecall\" rel=\"Ext.direct.RemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-call\" rel=\"Ext.direct.RemotingProvider-event-call\" class=\"docClass\">call</a>"
      ],
      "method_calls": [
        "fireEvent",
        "sendFormRequest"
      ],
      "id": "method-configureFormRequest",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Configure a form submission request ..."
    },
    {
      "tagname": "method",
      "name": "configureRequest",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 525
        }
      ],
      "doc": "<p>Configure a direct request</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "action",
          "doc": "<p>The action being executed</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "method",
          "doc": "<p>The being executed</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecall\" rel=\"Ext.direct.RemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-call\" rel=\"Ext.direct.RemotingProvider-event-call\" class=\"docClass\">call</a>"
      ],
      "method_calls": [
        "fireEvent",
        "queueTransaction"
      ],
      "id": "method-configureRequest",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Configure a direct request ..."
    },
    {
      "tagname": "method",
      "name": "connect",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 401
        }
      ],
      "doc": "<p>Abstract method for subclasses to implement.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecall\" rel=\"Ext.direct.RemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-call\" rel=\"Ext.direct.RemotingProvider-event-call\" class=\"docClass\">call</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-connect\" rel=\"Ext.direct.RemotingProvider-event-connect\" class=\"docClass\">connect</a>"
      ],
      "method_calls": [
        "fireEvent",
        "initAPI"
      ],
      "id": "method-connect",
      "owner": "Ext.direct.RemotingProvider",
      "return": null,
      "throws": null,
      "type": null,
      "overrides": [
        {
          "name": "connect",
          "owner": "Ext.direct.Provider",
          "link": "<a href=\"#!/api/Ext.direct.Provider-method-connect\" rel=\"Ext.direct.Provider-method-connect\" class=\"docClass\">Ext.direct.Provider.connect</a>"
        }
      ],
      "short_doc": "Abstract method for subclasses to implement. ..."
    },
    {
      "tagname": "method",
      "name": "continueFireEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 456
        }
      ],
      "doc": "<p>Continue to fire event.</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "args",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "bubbles",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBubbleParent"
      ],
      "id": "method-continueFireEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Continue to fire event. ..."
    },
    {
      "tagname": "method",
      "name": "createEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/JsonProvider.js",
          "linenr": 96
        }
      ],
      "doc": "<p>Create an event from a response object</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "response",
          "doc": "<p>Response object</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.direct.Event",
        "name": "return",
        "doc": "<p>The event</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-createEvent",
      "owner": "Ext.direct.JsonProvider",
      "short_doc": "Create an event from a response object ..."
    },
    {
      "tagname": "method",
      "name": "createEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/JsonProvider.js",
          "linenr": 57
        }
      ],
      "doc": "<p>Creates a set of events based on the XHR response</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "response",
          "doc": "<p>The XHR response</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.direct.Event[]",
        "name": "return",
        "doc": "<p>An array of <a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a></p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a>[]"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "createEvent",
        "parseResponse"
      ],
      "id": "method-createEvents",
      "owner": "Ext.direct.JsonProvider",
      "short_doc": "Creates a set of events based on the XHR response ..."
    },
    {
      "tagname": "method",
      "name": "createHandler",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 360
        }
      ],
      "doc": "<p>Create a handler function for a direct call.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "action",
          "doc": "<p>The action the call is for</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "method",
          "doc": "<p>The details of the method</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Function",
        "name": "return",
        "doc": "<p>A JS function that will kick off the call</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
      },
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecall\" rel=\"Ext.direct.RemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-call\" rel=\"Ext.direct.RemotingProvider-event-call\" class=\"docClass\">call</a>"
      ],
      "method_calls": [
        "configureFormRequest",
        "configureRequest"
      ],
      "id": "method-createHandler",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Create a handler function for a direct call. ..."
    },
    {
      "tagname": "method",
      "name": "createNamespaces",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 300
        }
      ],
      "doc": "<p>Create nested namespaces. Unlike <a href=\"#!/api/Ext-method-ns\" rel=\"Ext-method-ns\" class=\"docClass\">Ext.ns</a> this method supports\nnested objects as root of the namespace, not only Ext.global (window).</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "root",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "action",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-createNamespaces",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Create nested namespaces. ..."
    },
    {
      "tagname": "method",
      "name": "createRelayer",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 981
        }
      ],
      "doc": "<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "newName",
          "doc": "<p>The name under which to refire the passed parameters.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "beginEnd",
          "optional": true,
          "doc": "<p>The caller can specify on which indices to slice.</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "return": {
        "type": "Function",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
      },
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-createRelayer",
      "owner": "Ext.util.Observable",
      "short_doc": "Creates an event handling function which refires the event from this object as the passed event name. ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1261
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-destroy",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.util.ElementContainer",
          "link": "<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"
        },
        {
          "name": "destroy",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>"
        },
        {
          "name": "destroy",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>"
        }
      ],
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "disconnect",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 420
        }
      ],
      "doc": "<p>Abstract method for subclasses to implement.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-disconnect\" rel=\"Ext.direct.RemotingProvider-event-disconnect\" class=\"docClass\">disconnect</a>"
      ],
      "method_calls": [
        "fireEvent"
      ],
      "id": "method-disconnect",
      "owner": "Ext.direct.RemotingProvider",
      "return": null,
      "throws": null,
      "type": null,
      "overrides": [
        {
          "name": "disconnect",
          "owner": "Ext.direct.Provider",
          "link": "<a href=\"#!/api/Ext.direct.Provider-method-disconnect\" rel=\"Ext.direct.Provider-method-disconnect\" class=\"docClass\">Ext.direct.Provider.disconnect</a>"
        }
      ],
      "short_doc": "Abstract method for subclasses to implement. ..."
    },
    {
      "tagname": "method",
      "name": "enableBubble",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 995
        }
      ],
      "doc": "<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/String[]",
          "name": "eventNames",
          "doc": "<p>The event name to bubble, or an Array of event names.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-enableBubble",
      "owner": "Ext.util.Observable",
      "short_doc": "Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."
    },
    {
      "tagname": "method",
      "name": "fireEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 416
        }
      ],
      "doc": "<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to fire.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object...",
          "name": "args",
          "doc": "<p>Variable number of parameters are passed to handlers.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>returns false if any of the handlers return false otherwise it returns true.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs"
      ],
      "id": "method-fireEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."
    },
    {
      "tagname": "method",
      "name": "fireEventArgs",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 431
        }
      ],
      "doc": "<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to fire.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object[]",
          "name": "args",
          "doc": "<p>An array of parameters which are passed to handlers.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>returns false if any of the handlers return false otherwise it returns true.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "continueFireEvent"
      ],
      "id": "method-fireEventArgs",
      "owner": "Ext.util.Observable",
      "short_doc": "Fires the specified event with the passed parameter list. ..."
    },
    {
      "tagname": "method",
      "name": "getBubbleParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 489
        }
      ],
      "doc": "<p>Gets the bubbling parent for an Observable</p>\n",
      "private": true,
      "return": {
        "type": "Ext.util.Observable",
        "name": "return",
        "doc": "<p>The bubble parent. null is returned if no bubble target exists</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
      },
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBubbleTarget"
      ],
      "id": "method-getBubbleParent",
      "owner": "Ext.util.Observable",
      "short_doc": "Gets the bubbling parent for an Observable ..."
    },
    {
      "tagname": "method",
      "name": "getCallData",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 568
        }
      ],
      "doc": "<p>Gets the Ajax call info for a transaction</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "<p>The transaction</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>The call params</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getCallData",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Gets the Ajax call info for a transaction ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "getNamespace",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 277
        }
      ],
      "doc": "<p>Get nested namespace by property.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "root",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "action",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getNamespace",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Get nested namespace by property. ..."
    },
    {
      "tagname": "method",
      "name": "getTransaction",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 512
        }
      ],
      "doc": "<p>Get transaction from XHR options</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "doc": "<p>The options sent to the Ajax request</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.direct.Transaction",
        "name": "return",
        "doc": "<p>The transaction, null if not found</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
      },
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getTransaction",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Get transaction from XHR options ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "hasListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 833
        }
      ],
      "doc": "<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to check for</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."
    },
    {
      "tagname": "method",
      "name": "initAPI",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 322
        }
      ],
      "doc": "<p>Initialize the API</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecall\" rel=\"Ext.direct.RemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-call\" rel=\"Ext.direct.RemotingProvider-event-call\" class=\"docClass\">call</a>"
      ],
      "method_calls": [
        "createHandler",
        "createNamespaces",
        "getNamespace"
      ],
      "id": "method-initAPI",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Initialize the API ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "isConnected",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 394
        }
      ],
      "doc": "<p>Returns whether or not the server-side is currently connected.\nAbstract method for subclasses to implement.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-isConnected",
      "owner": "Ext.direct.RemotingProvider",
      "return": null,
      "throws": null,
      "type": null,
      "overrides": [
        {
          "name": "isConnected",
          "owner": "Ext.direct.Provider",
          "link": "<a href=\"#!/api/Ext.direct.Provider-method-isConnected\" rel=\"Ext.direct.Provider-method-isConnected\" class=\"docClass\">Ext.direct.Provider.isConnected</a>"
        }
      ],
      "short_doc": "Returns whether or not the server-side is currently connected. ..."
    },
    {
      "tagname": "method",
      "name": "mon",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1134
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item to which to add a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-mon",
      "owner": "Ext.util.Observable",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for addManagedListener. ..."
    },
    {
      "tagname": "method",
      "name": "mun",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1140
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item from which to remove a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-mun",
      "owner": "Ext.util.Observable",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for removeManagedListener. ..."
    },
    {
      "tagname": "method",
      "name": "on",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1122
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "eventName",
          "doc": "<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Object",
              "name": "scope",
              "doc": "<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "delay",
              "doc": "<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "single",
              "doc": "<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "buffer",
              "doc": "<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Ext.util.Observable",
              "name": "target",
              "doc": "<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
            },
            {
              "tagname": "params",
              "type": "String",
              "name": "element",
              "doc": "<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "destroyable",
              "default": "false",
              "optional": true,
              "doc": "<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "priority",
              "optional": true,
              "doc": "<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-on",
      "owner": "Ext.util.Observable",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for addListener. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onData",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 460
        }
      ],
      "doc": "<p>React to the ajax request being completed</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "options",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "success",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "response",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-beforecallback\" rel=\"Ext.direct.RemotingProvider-event-beforecallback\" class=\"docClass\">beforecallback</a>",
        "<a href=\"#!/api/Ext.direct.RemotingProvider-event-data\" rel=\"Ext.direct.RemotingProvider-event-data\" class=\"docClass\">data</a>"
      ],
      "method_calls": [
        "createEvents",
        "fireEvent",
        "getTransaction",
        "runCallback"
      ],
      "id": "method-onData",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "React to the ajax request being completed ..."
    },
    {
      "tagname": "method",
      "name": "parseResponse",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/JsonProvider.js",
          "linenr": 37
        }
      ],
      "doc": "<p>Parse the JSON response</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "response",
          "doc": "<p>The XHR response object</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>The data in the response.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-parseResponse",
      "owner": "Ext.direct.JsonProvider",
      "short_doc": "Parse the JSON response ..."
    },
    {
      "tagname": "method",
      "name": "prepareClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 164
        }
      ],
      "doc": "<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "T",
          "doc": "<p>The class constructor to prepare.</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-prepareClass",
      "owner": "Ext.util.Observable",
      "short_doc": "Prepares a given class for observable instances. ..."
    },
    {
      "tagname": "method",
      "name": "queueTransaction",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 636
        }
      ],
      "doc": "<p>Add a new transaction to the queue</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "<p>The transaction</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "combineAndSend",
        "sendFormRequest",
        "sendRequest"
      ],
      "id": "method-queueTransaction",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Add a new transaction to the queue ..."
    },
    {
      "tagname": "method",
      "name": "relayEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 928
        }
      ],
      "doc": "<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "origin",
          "doc": "<p>The Observable whose events this object is to relay.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String[]",
          "name": "events",
          "doc": "<p>Array of event names to relay.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "prefix",
          "optional": true,
          "doc": "<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "createRelayer",
        "mon"
      ],
      "id": "method-relayEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Relays selected events from the specified Observable as if the events were fired by this. ..."
    },
    {
      "tagname": "method",
      "name": "removeListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 688
        }
      ],
      "doc": "<p>Removes an event handler.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The type of event the handler was associated with.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> call.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeListener"
      ],
      "id": "method-removeListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes an event handler. ..."
    },
    {
      "tagname": "method",
      "name": "removeManagedListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 375
        }
      ],
      "doc": "<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item from which to remove a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeManagedListener",
        "removeManagedListenerItem"
      ],
      "id": "method-removeManagedListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes listeners that were added by the mon method. ..."
    },
    {
      "tagname": "method",
      "name": "removeManagedListenerItem",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 775
        }
      ],
      "doc": "<p>Remove a single managed listener item</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "isClear",
          "doc": "<p>True if this is being called during a clear</p>\n\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "managedListener",
          "doc": "<p>The managed listener item\nSee removeManagedListener for other args</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-removeManagedListenerItem",
      "owner": "Ext.util.Observable",
      "overrides": [
        {
          "name": "removeManagedListenerItem",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>"
        }
      ],
      "short_doc": "Remove a single managed listener item ..."
    },
    {
      "tagname": "method",
      "name": "resumeEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 881
        }
      ],
      "doc": "<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String...",
          "name": "eventName",
          "doc": "<p>Multiple event names to resume.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-resumeEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Resumes firing of the named event(s). ..."
    },
    {
      "tagname": "method",
      "name": "resumeEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 905
        }
      ],
      "doc": "<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-resumeEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Resumes firing events (see suspendEvents). ..."
    },
    {
      "tagname": "method",
      "name": "runCallback",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 432
        }
      ],
      "doc": "<p>Run any callbacks related to the transaction.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "<p>The transaction</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.direct.Event",
          "name": "event",
          "doc": "<p>The event</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-runCallback",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Run any callbacks related to the transaction. ..."
    },
    {
      "tagname": "method",
      "name": "sendFormRequest",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 736
        }
      ],
      "doc": "<p>Sends a form request</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "<p>The transaction to send</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-sendFormRequest",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Sends a form request ..."
    },
    {
      "tagname": "method",
      "name": "sendRequest",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 587
        }
      ],
      "doc": "<p>Sends a request to the server</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object/Array",
          "name": "data",
          "doc": "<p>The data to send</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getCallData"
      ],
      "id": "method-sendRequest",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Sends a request to the server ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "suspendEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 857
        }
      ],
      "doc": "<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String...",
          "name": "eventName",
          "doc": "<p>Multiple event names to suspend.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-suspendEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Suspends firing of the named event(s). ..."
    },
    {
      "tagname": "method",
      "name": "suspendEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 844
        }
      ],
      "doc": "<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "queueSuspended",
          "doc": "<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-suspendEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Suspends the firing of all events. ..."
    },
    {
      "tagname": "method",
      "name": "un",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1128
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The type of event the handler was associated with.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> call.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-un",
      "owner": "Ext.util.Observable",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for removeListener. ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "event",
      "name": "beforecall",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 234
        }
      ],
      "doc": "<p>Fires immediately before the client-side sends off the RPC call. By returning\n<code>false</code> from an event handler you can prevent the call from being made.</p>\n",
      "preventable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.RemotingProvider",
          "name": "provider",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.RemotingProvider\" rel=\"Ext.direct.RemotingProvider\" class=\"docClass\">Ext.direct.RemotingProvider</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "meta",
          "doc": "<p>The meta data</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-beforecall",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Fires immediately before the client-side sends off the RPC call. ..."
    },
    {
      "tagname": "event",
      "name": "beforecallback",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 259
        }
      ],
      "doc": "<p>Fires before callback function is executed. By returning <code>false</code> from an event handler\nyou can prevent the callback from executing.</p>\n",
      "preventable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.RemotingProvider",
          "name": "provider",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.RemotingProvider\" rel=\"Ext.direct.RemotingProvider\" class=\"docClass\">Ext.direct.RemotingProvider</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-beforecallback",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Fires before callback function is executed. ..."
    },
    {
      "tagname": "event",
      "name": "call",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/RemotingProvider.js",
          "linenr": 247
        }
      ],
      "doc": "<p>Fires immediately after the request to the server-side is sent. This does\nNOT fire after the response has come back from the call.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.RemotingProvider",
          "name": "provider",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.RemotingProvider\" rel=\"Ext.direct.RemotingProvider\" class=\"docClass\">Ext.direct.RemotingProvider</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.direct.Transaction",
          "name": "transaction",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Transaction\" rel=\"Ext.direct.Transaction\" class=\"docClass\">Ext.direct.Transaction</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "meta",
          "doc": "<p>The meta data</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-call",
      "owner": "Ext.direct.RemotingProvider",
      "short_doc": "Fires immediately after the request to the server-side is sent. ..."
    },
    {
      "tagname": "event",
      "name": "connect",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 77
        }
      ],
      "doc": "<p>Fires when the Provider connects to the server-side</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Provider",
          "name": "provider",
          "doc": "<p>The <a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Provider</a>.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Ext.direct.Provider</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-connect",
      "owner": "Ext.direct.Provider",
      "short_doc": "Fires when the Provider connects to the server-side ..."
    },
    {
      "tagname": "event",
      "name": "data",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 93
        }
      ],
      "doc": "<p>Fires when the Provider receives data from the server-side</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Provider",
          "name": "provider",
          "doc": "<p>The <a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Provider</a>.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Ext.direct.Provider</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.direct.Event",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a> type that occurred.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Event\" rel=\"Ext.direct.Event\" class=\"docClass\">Ext.direct.Event</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-data",
      "owner": "Ext.direct.Provider",
      "short_doc": "Fires when the Provider receives data from the server-side ..."
    },
    {
      "tagname": "event",
      "name": "disconnect",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 85
        }
      ],
      "doc": "<p>Fires when the Provider disconnects from the server-side</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.direct.Provider",
          "name": "provider",
          "doc": "<p>The <a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Provider</a>.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.direct.Provider\" rel=\"Ext.direct.Provider\" class=\"docClass\">Ext.direct.Provider</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-disconnect",
      "owner": "Ext.direct.Provider",
      "short_doc": "Fires when the Provider disconnects from the server-side ..."
    },
    {
      "tagname": "event",
      "name": "exception",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/direct/Provider.js",
          "linenr": 102
        }
      ],
      "doc": "<p>Fires when the Provider receives an exception from the server-side</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-exception",
      "owner": "Ext.direct.Provider",
      "short_doc": "Fires when the Provider receives an exception from the server-side ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.direct.RemotingProvider",
  "short_doc": "The RemotingProvider exposes access to\nserver side methods on the client (a remote procedure call (RPC) type of\nconne..."
}