{
  "tagname": "class",
  "name": "Ext.dom.Query",
  "autodetected": {
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
      "linenr": 31
    }
  ],
  "doc": "<p>Provides high performance selector/xpath processing by compiling queries into reusable functions. New pseudo classes\nand matchers can be plugged. It works on HTML and XML documents (if a content node is passed in).</p>\n\n<p>DomQuery supports most of the <a href=\"http://www.w3.org/TR/2005/WD-css3-selectors-20051215/#selectors\">CSS3 selectors spec</a>, along with some custom selectors and basic XPath.</p>\n\n<p>All selectors, attribute filters and pseudos below can be combined infinitely in any order. For example\n<code>div.foo:nth-child(odd)[@foo=bar].bar:first</code> would be a perfectly valid selector. Node filters are processed\nin the order in which they appear, which allows you to optimize your queries for your document structure.</p>\n\n<h2>Element Selectors:</h2>\n\n<ul>\n<li><strong><code>*</code></strong> any element</li>\n<li><strong><code>E</code></strong> an element with the tag E</li>\n<li><strong><code>E F</code></strong> All descendent elements of E that have the tag F</li>\n<li><strong><code>E &gt; F</code></strong> or <strong>E/F</strong> all direct children elements of E that have the tag F</li>\n<li><strong><code>E + F</code></strong> all elements with the tag F that are immediately preceded by an element with the tag E</li>\n<li><strong><code>E ~ F</code></strong> all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n\n\n<h2>Attribute Selectors:</h2>\n\n<p>The use of <code>@</code> and quotes are optional. For example, <code>div[@foo='bar']</code> is also a valid attribute selector.</p>\n\n<ul>\n<li><strong><code>E[foo]</code></strong> has an attribute \"foo\"</li>\n<li><strong><code>E[foo=bar]</code></strong> has an attribute \"foo\" that equals \"bar\"</li>\n<li><strong><code>E[foo^=bar]</code></strong> has an attribute \"foo\" that starts with \"bar\"</li>\n<li><strong><code>E[foo$=bar]</code></strong> has an attribute \"foo\" that ends with \"bar\"</li>\n<li><strong><code>E[foo*=bar]</code></strong> has an attribute \"foo\" that contains the substring \"bar\"</li>\n<li><strong><code>E[foo%=2]</code></strong> has an attribute \"foo\" that is evenly divisible by 2</li>\n<li><strong><code>E[foo!=bar]</code></strong> attribute \"foo\" does not equal \"bar\"</li>\n</ul>\n\n\n<h2>Pseudo Classes:</h2>\n\n<ul>\n<li><strong><code>E:first-child</code></strong> E is the first child of its parent</li>\n<li><strong><code>E:last-child</code></strong> E is the last child of its parent</li>\n<li><strong><code>E:nth-child(_n_)</code></strong> E is the _n_th child of its parent (1 based as per the spec)</li>\n<li><strong><code>E:nth-child(odd)</code></strong> E is an odd child of its parent</li>\n<li><strong><code>E:nth-child(even)</code></strong> E is an even child of its parent</li>\n<li><strong><code>E:only-child</code></strong> E is the only child of its parent</li>\n<li><strong><code>E:checked</code></strong> E is an element that is has a checked attribute that is true (e.g. a radio or checkbox)</li>\n<li><strong><code>E:first</code></strong> the first E in the resultset</li>\n<li><strong><code>E:last</code></strong> the last E in the resultset</li>\n<li><strong><code>E:nth(_n_)</code></strong> the _n_th E in the resultset (1 based)</li>\n<li><strong><code>E:odd</code></strong> shortcut for :nth-child(odd)</li>\n<li><strong><code>E:even</code></strong> shortcut for :nth-child(even)</li>\n<li><strong><code>E:contains(foo)</code></strong> E's innerHTML contains the substring \"foo\"</li>\n<li><strong><code>E:nodeValue(foo)</code></strong> E contains a textNode with a nodeValue that equals \"foo\"</li>\n<li><strong><code>E:not(S)</code></strong> an E element that does not match simple selector S</li>\n<li><strong><code>E:has(S)</code></strong> an E element that has a descendent that matches simple selector S</li>\n<li><strong><code>E:next(S)</code></strong> an E element whose next sibling matches simple selector S</li>\n<li><strong><code>E:prev(S)</code></strong> an E element whose previous sibling matches simple selector S</li>\n<li><strong><code>E:any(S1|S2|S2)</code></strong> an E element which matches any of the simple selectors S1, S2 or S3</li>\n<li><strong><code>E:visible(true)</code></strong> an E element which is deeply visible according to <a href=\"#!/api/Ext.dom.Element-method-isVisible\" rel=\"Ext.dom.Element-method-isVisible\" class=\"docClass\">Ext.dom.Element.isVisible</a></li>\n</ul>\n\n\n<h2>CSS Value Selectors:</h2>\n\n<ul>\n<li><strong><code>E{display=none}</code></strong> css value \"display\" that equals \"none\"</li>\n<li><strong><code>E{display^=none}</code></strong> css value \"display\" that starts with \"none\"</li>\n<li><strong><code>E{display$=none}</code></strong> css value \"display\" that ends with \"none\"</li>\n<li><strong><code>E{display*=none}</code></strong> css value \"display\" that contains the substring \"none\"</li>\n<li><strong><code>E{display%=2}</code></strong> css value \"display\" that is evenly divisible by 2</li>\n<li><strong><code>E{display!=none}</code></strong> css value \"display\" that does not equal \"none\"</li>\n</ul>\n\n\n<h2>XML Namespaces:</h2>\n\n<ul>\n<li><strong><code>ns|E</code></strong> an element with tag E and namespace prefix ns</li>\n</ul>\n\n",
  "alternateClassNames": [
    "Ext.DomQuery",
    "Ext.core.DomQuery"
  ],
  "singleton": true,
  "members": [
    {
      "tagname": "property",
      "name": "matchers",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 896
        }
      ],
      "doc": "<p>Collection of matching regular expressions and code snippets.\nEach capture group within <code>()</code> will be replace the <code>{}</code> in the select\nstatement as specified by their index.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": null,
      "readonly": null,
      "id": "property-matchers",
      "owner": "Ext.dom.Query",
      "short_doc": "Collection of matching regular expressions and code snippets. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "operators",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 918
        }
      ],
      "doc": "<p>Collection of operator comparison functions.\nThe default operators are <code>=</code>, <code>!=</code>, <code>^=</code>, <code>$=</code>, <code>*=</code>, <code>%=</code>, <code>|=</code> and <code>~=</code>.</p>\n\n<p>New operators can be added as long as the match the format <em>c</em><code>=</code> where <em>c</em>\nis any character other than space, <code>&gt;</code>, or <code>&lt;</code>.</p>\n\n<p>Operator functions are passed the following parameters:</p>\n\n<ul>\n<li><code>propValue</code> : The property value to test.</li>\n<li><code>compareTo</code> : The value to compare to.</li>\n</ul>\n\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": null,
      "readonly": null,
      "id": "property-operators",
      "owner": "Ext.dom.Query",
      "short_doc": "Collection of operator comparison functions. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "pseudos",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 957
        }
      ],
      "doc": "<p>Object hash of \"pseudo class\" filter functions which are used when filtering selections.\nEach function is passed two parameters:</p>\n\n<ul>\n<li><p><strong>c</strong> : Array\n  An Array of DOM elements to filter.</p></li>\n<li><p><strong>v</strong> : String\n  The argument (if any) supplied in the selector.</p></li>\n</ul>\n\n\n<p>A filter function returns an Array of DOM elements which conform to the pseudo class.\nIn addition to the provided pseudo classes listed above such as <code>first-child</code> and <code>nth-child</code>,\ndevelopers may add additional, custom psuedo class filters to select elements according to application-specific requirements.</p>\n\n<p>For example, to filter <code>a</code> elements to only return links to <strong>external</strong> resources:</p>\n\n<pre><code>Ext.DomQuery.pseudos.external = function(c, v) {\n    var r = [], ri = -1;\n    for(var i = 0, ci; ci = c[i]; i++) {\n        // Include in result set only if it's a link to an external resource\n        if (ci.hostname != location.hostname) {\n            r[++ri] = ci;\n        }\n    }\n    return r;\n};\n</code></pre>\n\n<p>Then external links could be gathered with the following statement:</p>\n\n<pre><code>var externalLinks = <a href=\"#!/api/Ext-method-select\" rel=\"Ext-method-select\" class=\"docClass\">Ext.select</a>(\"a:external\");\n</code></pre>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": null,
      "readonly": null,
      "id": "property-pseudos",
      "owner": "Ext.dom.Query",
      "short_doc": "Object hash of \"pseudo class\" filter functions which are used when filtering selections. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "method",
      "name": "compile",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 602
        }
      ],
      "doc": "<p>Compiles a selector/xpath query into a reusable function. The returned function\ntakes one parameter \"root\" (optional), which is the context node from where the query should start.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The selector/xpath query</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "type",
          "default": "\"select\"",
          "optional": true,
          "doc": "<p>Either \"select\" or \"simple\" for a simple selector match</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Function",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-compile",
      "owner": "Ext.dom.Query",
      "short_doc": "Compiles a selector/xpath query into a reusable function. ..."
    },
    {
      "tagname": "method",
      "name": "filter",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 874
        }
      ],
      "doc": "<p>Filters an array of elements to only include matches of a simple selector\n(e.g. <code>div.some-class</code> or <code>span:first-child</code>)</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "HTMLElement[]",
          "name": "el",
          "doc": "<p>An array of elements to filter</p>\n",
          "html_type": "HTMLElement[]"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The simple selector to test</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "nonMatches",
          "doc": "<p>If true, it returns the elements that DON'T match the selector instead of the\nones that match</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "HTMLElement[]",
        "name": "return",
        "doc": "<p>An Array of DOM elements which match the selector. If there are no matches, and empty\nArray is returned.</p>\n",
        "properties": null,
        "html_type": "HTMLElement[]"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-filter",
      "owner": "Ext.dom.Query",
      "short_doc": "Filters an array of elements to only include matches of a simple selector\n(e.g. ..."
    },
    {
      "tagname": "method",
      "name": "is",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 858
        }
      ],
      "doc": "<p>Returns true if the passed element(s) match the passed simple selector\n(e.g. <code>div.some-class</code> or <code>span:first-child</code>)</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/HTMLElement/HTMLElement[]",
          "name": "el",
          "doc": "<p>An element id, element or array of elements</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/HTMLElement[]"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The simple selector to test</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-is",
      "owner": "Ext.dom.Query",
      "short_doc": "Returns true if the passed element(s) match the passed simple selector\n(e.g. ..."
    },
    {
      "tagname": "method",
      "name": "jsSelect",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Selects an array of DOM nodes using JavaScript-only implementation.</p>\n\n<p>Use <a href=\"#!/api/Ext.dom.Query-method-select\" rel=\"Ext.dom.Query-method-select\" class=\"docClass\">select</a> to take advantage of browsers built-in support for CSS selectors.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The selector/xpath query (can be a comma separated list of selectors)</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement/String",
          "name": "root",
          "default": "document",
          "optional": true,
          "doc": "<p>The start of the query.</p>\n",
          "html_type": "HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "HTMLElement[]",
        "name": "return",
        "doc": "<p>An Array of DOM elements which match the selector. If there are\nno matches, and empty Array is returned.</p>\n",
        "properties": null,
        "html_type": "HTMLElement[]"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-jsSelect",
      "owner": "Ext.dom.Query",
      "short_doc": "Selects an array of DOM nodes using JavaScript-only implementation. ..."
    },
    {
      "tagname": "method",
      "name": "select",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 754
        }
      ],
      "doc": "<p>Selects an array of DOM nodes by CSS/XPath selector.</p>\n\n<p>Uses <a href=\"https://developer.mozilla.org/en/DOM/document.querySelectorAll\">document.querySelectorAll</a> if browser supports that, otherwise falls back to\n<a href=\"#!/api/Ext.dom.Query-method-jsSelect\" rel=\"Ext.dom.Query-method-jsSelect\" class=\"docClass\">jsSelect</a> to do the work.</p>\n\n<p>Aliased as <a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">Ext.query</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "path",
          "doc": "<p>The selector/xpath query</p>\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "root",
          "default": "document",
          "optional": true,
          "doc": "<p>The start of the query.</p>\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "type",
          "default": "\"select\"",
          "optional": true,
          "doc": "<p>Either \"select\" or \"simple\" for a simple selector match (only valid when\nused when the call is deferred to the jsSelect method)</p>\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "single",
          "optional": true,
          "doc": "<p>Pass <code>true</code> to select only the first matching node using <code>document.querySelector</code> (where available)</p>\n\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "HTMLElement[]",
        "name": "return",
        "doc": "<p>An array of DOM elements (not a NodeList as returned by <code>querySelectorAll</code>).</p>\n\n",
        "properties": null,
        "html_type": "HTMLElement[]"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-select",
      "owner": "Ext.dom.Query",
      "short_doc": "Selects an array of DOM nodes by CSS/XPath selector. ..."
    },
    {
      "tagname": "method",
      "name": "selectNode",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 803
        }
      ],
      "doc": "<p>Selects a single element.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The selector/xpath query</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "root",
          "default": "document",
          "optional": true,
          "doc": "<p>The start of the query.</p>\n",
          "html_type": "HTMLElement"
        }
      ],
      "return": {
        "type": "HTMLElement",
        "name": "return",
        "doc": "<p>The DOM element which matched the selector.</p>\n",
        "properties": null,
        "html_type": "HTMLElement"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-selectNode",
      "owner": "Ext.dom.Query",
      "short_doc": "Selects a single element. ..."
    },
    {
      "tagname": "method",
      "name": "selectNumber",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 845
        }
      ],
      "doc": "<p>Selects the value of a node, parsing integers and floats.\nReturns the defaultValue, or 0 if none is specified.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The selector/xpath query</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "root",
          "default": "document",
          "optional": true,
          "doc": "<p>The start of the query.</p>\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "defaultValue",
          "optional": true,
          "doc": "<p>When specified, this is return as empty value.</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        }
      ],
      "return": {
        "type": "Number",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-selectNumber",
      "owner": "Ext.dom.Query",
      "short_doc": "Selects the value of a node, parsing integers and floats. ..."
    },
    {
      "tagname": "method",
      "name": "selectValue",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dom/Query.js",
          "linenr": 813
        }
      ],
      "doc": "<p>Selects the value of a node, optionally replacing null with the defaultValue.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "selector",
          "doc": "<p>The selector/xpath query</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "root",
          "default": "document",
          "optional": true,
          "doc": "<p>The start of the query.</p>\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "defaultValue",
          "optional": true,
          "doc": "<p>When specified, this is return as empty value.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "String",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-selectValue",
      "owner": "Ext.dom.Query",
      "short_doc": "Selects the value of a node, optionally replacing null with the defaultValue. ..."
    }
  ],
  "aliases": {
  },
  "id": "class-Ext.dom.Query",
  "short_doc": "Provides high performance selector/xpath processing by compiling queries into reusable functions. ..."
}