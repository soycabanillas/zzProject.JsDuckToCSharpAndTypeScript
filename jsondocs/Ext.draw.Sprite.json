{
  "tagname": "class",
  "name": "Ext.draw.Sprite",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
      "linenr": 21
    }
  ],
  "doc": "<p>A Sprite is an object rendered in a Drawing surface.</p>\n\n<h2>Types</h2>\n\n<p>The following sprite types are supported:</p>\n\n<h3>Rect</h3>\n\n<p>Rectangle requires <code>width</code> and <code>height</code> attributes:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: 'rect',\n        width: 100,\n        height: 50,\n        radius: 10,\n        fill: 'green',\n        opacity: 0.5,\n        stroke: 'red',\n        'stroke-width': 2\n    }]\n});\n</code></pre>\n\n<h3>Circle</h3>\n\n<p>Circle requires <code>x</code>, <code>y</code> and <code>radius</code> attributes:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: 'circle',\n        radius: 90,\n        x: 100,\n        y: 100,\n        fill: 'blue'\n    }]\n});\n</code></pre>\n\n<h3>Ellipse</h3>\n\n<p>Ellipse requires <code>x</code>, <code>y</code>, <code>radiusX</code> and <code>radiusY</code> attributes:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: \"ellipse\",\n        radiusX: 100,\n        radiusY: 50,\n        x: 100,\n        y: 100,\n        fill: 'red'\n    }]\n});\n</code></pre>\n\n<h3>Path</h3>\n\n<p>Path requires the <code>path</code> attribute:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: \"path\",\n        path: \"M-66.6 26C-66.6 26 -75 22 -78.2 18.4C-81.4 14.8 -80.948 19.966 \" +\n              \"-85.8 19.6C-91.647 19.159 -90.6 3.2 -90.6 3.2L-94.6 10.8C-94.6 \" +\n              \"10.8 -95.8 25.2 -87.8 22.8C-83.893 21.628 -82.6 23.2 -84.2 \" +\n              \"24C-85.8 24.8 -78.6 25.2 -81.4 26.8C-84.2 28.4 -69.8 23.2 -72.2 \" +\n              \"33.6L-66.6 26z\",\n        fill: \"purple\"\n    }]\n});\n</code></pre>\n\n<h3>Text</h3>\n\n<p>Text requires the <code>text</code> attribute:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: \"text\",\n        text: \"Hello, Sprite!\",\n        fill: \"green\",\n        font: \"18px monospace\"\n    }]\n});\n</code></pre>\n\n<h3>Image</h3>\n\n<p>Image requires <code>width</code>, <code>height</code> and <code>src</code> attributes:</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 200,\n    height: 200,\n    items: [{\n        type: \"image\",\n        src: \"http://www.sencha.com/img/apple-touch-icon.png\",\n        width: 200,\n        height: 200\n    }]\n});\n</code></pre>\n\n<h2>Creating and adding a Sprite to a Surface</h2>\n\n<p>See <a href=\"#!/api/Ext.draw.Surface\" rel=\"Ext.draw.Surface\" class=\"docClass\">Ext.draw.Surface</a> documentation.</p>\n\n<h2>Transforming sprites</h2>\n\n<p>See <a href=\"#!/api/Ext.draw.Sprite-method-setAttributes\" rel=\"Ext.draw.Sprite-method-setAttributes\" class=\"docClass\">setAttributes</a> method documentation for examples on how to translate, scale and rotate the sprites.</p>\n",
  "aliases": {
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.Base",
  "mixins": [
    "Ext.util.Observable",
    "Ext.util.Animate"
  ],
  "requires": [
    "Ext.draw.SpriteDD"
  ],
  "uses": [

  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "draggable",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 239
        }
      ],
      "doc": "<p>True to make the sprite draggable.</p>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "id": "cfg-draggable",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "fill",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 205
        }
      ],
      "doc": "<p>The fill color.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-fill",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "font",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 221
        }
      ],
      "doc": "<p>Used with text type sprites. The full font description.\nUses the same syntax as the CSS font parameter</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-font",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Used with text type sprites. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "group",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 234
        }
      ],
      "doc": "<p>The group that this sprite belongs to, or an array of groups.\nOnly relevant when added to a <a href=\"#!/api/Ext.draw.Surface\" rel=\"Ext.draw.Surface\" class=\"docClass\">Surface</a>.</p>\n",
      "type": "String/String[]",
      "default": null,
      "properties": null,
      "id": "cfg-group",
      "owner": "Ext.draw.Sprite",
      "short_doc": "The group that this sprite belongs to, or an array of groups. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "cfg",
      "name": "height",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 173
        }
      ],
      "doc": "<p>The height of the rect or image sprite.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-height",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "listeners",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 197
        }
      ],
      "doc": "<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "id": "cfg-listeners",
      "owner": "Ext.util.Observable",
      "short_doc": "A config object containing one or more event handlers to be added to this object during initialization. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "cfg",
      "name": "opacity",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 201
        }
      ],
      "doc": "<p>The opacity of the sprite. A number between 0 and 1.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-opacity",
      "owner": "Ext.draw.Sprite",
      "short_doc": "The opacity of the sprite. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "path",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 197
        }
      ],
      "doc": "<p>The path of the path sprite written in SVG-like path syntax.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-path",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "radius",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 177
        }
      ],
      "doc": "<p>The radius of the circle sprite. Or in case of rect sprite, the border radius.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-radius",
      "owner": "Ext.draw.Sprite",
      "short_doc": "The radius of the circle sprite. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "radiusX",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 181
        }
      ],
      "doc": "<p>The radius of the ellipse sprite along x-axis.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-radiusX",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "radiusY",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 185
        }
      ],
      "doc": "<p>The radius of the ellipse sprite along y-axis.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-radiusY",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "src",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 230
        }
      ],
      "doc": "<p>Path to the image to show in image sprites.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-src",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "stroke",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 209
        }
      ],
      "doc": "<p>The stroke color.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-stroke",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "stroke-width",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 213
        }
      ],
      "doc": "<p>The width of the stroke.</p>\n\n<p>Note that this attribute needs to be quoted when used.  Like so:</p>\n\n<pre><code>\"stroke-width\": 12,\n</code></pre>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-stroke-width",
      "owner": "Ext.draw.Sprite",
      "short_doc": "The width of the stroke. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "text",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 226
        }
      ],
      "doc": "<p>The actual text to render in text sprites.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-text",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "type",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 162
        }
      ],
      "doc": "<p>The type of the sprite.\nPossible options are 'circle', 'ellipse', 'path', 'rect', 'text', 'image'.</p>\n\n<p>See <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a> class documentation for examples of all types.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-type",
      "owner": "Ext.draw.Sprite",
      "short_doc": "The type of the sprite. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "width",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 169
        }
      ],
      "doc": "<p>The width of the rect or image sprite.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-width",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "x",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 189
        }
      ],
      "doc": "<p>Sprite position along the x-axis.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-x",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "cfg",
      "name": "y",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 193
        }
      ],
      "doc": "<p>Sprite position along the y-axis.</p>\n",
      "type": "Number",
      "default": null,
      "properties": null,
      "id": "cfg-y",
      "owner": "Ext.draw.Sprite",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "dd",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 364
        }
      ],
      "doc": "<p>If this Sprite is configured <a href=\"#!/api/Ext.draw.Sprite-cfg-draggable\" rel=\"Ext.draw.Sprite-cfg-draggable\" class=\"docClass\">draggable</a>, this property will contain\nan instance of <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> which handles dragging the Sprite.</p>\n\n<p>The developer must provide implementations of the abstract methods of <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>\nin order to supply behaviour for each stage of the drag/drop process. See <a href=\"#!/api/Ext.draw.Sprite-cfg-draggable\" rel=\"Ext.draw.Sprite-cfg-draggable\" class=\"docClass\">draggable</a>.</p>\n",
      "type": "Ext.dd.DragSource",
      "default": null,
      "properties": null,
      "id": "property-dd",
      "owner": "Ext.draw.Sprite",
      "short_doc": "If this Sprite is configured draggable, this property will contain\nan instance of Ext.dd.DragSource which handles dra...",
      "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
    },
    {
      "tagname": "property",
      "name": "dirtyFont",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 247
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 247,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-dirtyFont",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "dirtyHidden",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 244
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 244,
      "type": "Boolean",
      "default": "false",
      "readonly": null,
      "id": "property-dirtyHidden",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "dirtyPath",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 246
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 246,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-dirtyPath",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "dirtyTransform",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 245
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 245,
      "type": "Boolean",
      "default": "false",
      "readonly": null,
      "id": "property-dirtyTransform",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "eventsSuspended",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 237
        }
      ],
      "doc": "<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Number",
      "default": "0",
      "readonly": null,
      "id": "property-eventsSuspended",
      "owner": "Ext.util.Observable",
      "short_doc": "Initial suspended call count. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "fontProperties",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 256,
      "type": "Array",
      "default": "['font', 'font-size', 'font-weight', 'font-style', 'font-family', 'text-anchor', 'text']",
      "readonly": null,
      "id": "property-fontProperties",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "hasListeners",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 243
        }
      ],
      "doc": "<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "readonly": true,
      "id": "property-hasListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "This object holds a key for any event that has a listener. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isAnimate",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 228
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 228,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isAnimate",
      "owner": "Ext.util.Animate",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isObservable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 231
        }
      ],
      "doc": "<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-isObservable",
      "owner": "Ext.util.Observable",
      "short_doc": "true in this class to identify an object as an instantiated Observable, or subclass thereof. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isSprite",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 250
        }
      ],
      "doc": "<p><code>true</code> in this class to identify an object as an instantiated Sprite, or subclass thereof.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-isSprite",
      "owner": "Ext.draw.Sprite",
      "short_doc": "true in this class to identify an object as an instantiated Sprite, or subclass thereof. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "pathProperties",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 265
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 265,
      "type": "Array",
      "default": "['x', 'y', 'd', 'path', 'height', 'width', 'radius', 'r', 'rx', 'ry', 'cx', 'cy']",
      "readonly": null,
      "id": "property-pathProperties",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "zIndex",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 255
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 255,
      "type": "Number",
      "default": "0",
      "readonly": null,
      "id": "property-zIndex",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "zIndexDirty",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 248
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 248,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-zIndexDirty",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "constructor",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 279
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 279,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addEvents",
        "setAttributes"
      ],
      "id": "method-constructor",
      "owner": "Ext.draw.Sprite",
      "return": {
        "type": "Ext.draw.Sprite",
        "doc": "\n",
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addCls",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 656
        }
      ],
      "doc": "<p>Adds one or more CSS classes to the element. Duplicate classes are automatically filtered out.  Note this method\nis severly limited in VML.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/String[]",
          "name": "className",
          "doc": "<p>The CSS class to add, or an array of classes</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-addCls",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Adds one or more CSS classes to the element. ..."
    },
    {
      "tagname": "method",
      "name": "addEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 800
        }
      ],
      "doc": "<p>Adds the specified events to the list of events which this Observable may fire.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object/String...",
          "name": "eventNames",
          "doc": "<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-addEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Adds the specified events to the list of events which this Observable may fire. ..."
    },
    {
      "tagname": "method",
      "name": "addListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 502
        }
      ],
      "doc": "<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "eventName",
          "doc": "<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Object",
              "name": "scope",
              "doc": "<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "delay",
              "doc": "<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "single",
              "doc": "<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "buffer",
              "doc": "<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Ext.util.Observable",
              "name": "target",
              "doc": "<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
            },
            {
              "tagname": "params",
              "type": "String",
              "name": "element",
              "doc": "<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "destroyable",
              "default": "false",
              "optional": true,
              "doc": "<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "priority",
              "optional": true,
              "doc": "<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addListener"
      ],
      "id": "method-addListener",
      "owner": "Ext.util.Observable",
      "overrides": [
        {
          "name": "addListener",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>"
        }
      ],
      "short_doc": "Appends an event handler to this object. ..."
    },
    {
      "tagname": "method",
      "name": "addManagedListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 295
        }
      ],
      "doc": "<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item to which to add a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addManagedListener"
      ],
      "id": "method-addManagedListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr..."
    },
    {
      "tagname": "method",
      "name": "anim",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 302
        }
      ],
      "doc": "<ul>\n<li>process the passed fx configuration.</li>\n</ul>\n\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "stopAnimation"
      ],
      "id": "method-anim",
      "owner": "Ext.util.Animate",
      "short_doc": "process the passed fx configuration. ..."
    },
    {
      "tagname": "method",
      "name": "animate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 230
        }
      ],
      "doc": "<p>Performs custom animation on this object.</p>\n\n<p>This method is applicable to both the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a> class and the <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Sprite</a>\nclass. It performs animated transitions of certain properties of this object over a specified timeline.</p>\n\n<h3>Animating a <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a></h3>\n\n<p>When animating a Component, the following properties may be specified in <code>from</code>, <code>to</code>, and <code>keyframe</code> objects:</p>\n\n<ul>\n<li><p><code>x</code> - The Component's page X position in pixels.</p></li>\n<li><p><code>y</code> - The Component's page Y position in pixels</p></li>\n<li><p><code>left</code> - The Component's <code>left</code> value in pixels.</p></li>\n<li><p><code>top</code> - The Component's <code>top</code> value in pixels.</p></li>\n<li><p><code>width</code> - The Component's <code>width</code> value in pixels.</p></li>\n<li><p><code>height</code> - The Component's <code>height</code> value in pixels.</p></li>\n<li><p><code>dynamic</code> - Specify as true to update the Component's layout (if it is a Container) at every frame of the animation.\n<em>Use sparingly as laying out on every intermediate size change is an expensive operation.</em></p></li>\n</ul>\n\n\n<p>For example, to animate a Window to a new size, ensuring that its internal layout and any shadow is correct:</p>\n\n<pre><code>myWindow = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {\n    title: 'Test Component animation',\n    width: 500,\n    height: 300,\n    layout: {\n        type: 'hbox',\n        align: 'stretch'\n    },\n    items: [{\n        title: 'Left: 33%',\n        margins: '5 0 5 5',\n        flex: 1\n    }, {\n        title: 'Left: 66%',\n        margins: '5 5 5 5',\n        flex: 2\n    }]\n});\nmyWindow.show();\nmyWindow.header.el.on('click', function() {\n    myWindow.animate({\n        to: {\n            width: (myWindow.getWidth() == 500) ? 700 : 500,\n            height: (myWindow.getHeight() == 300) ? 400 : 300\n        }\n    });\n});\n</code></pre>\n\n<p>For performance reasons, by default, the internal layout is only updated when the Window reaches its final <code>\"to\"</code>\nsize. If dynamic updating of the Window's child Components is required, then configure the animation with\n<code>dynamic: true</code> and the two child items will maintain their proportions during the animation.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "<p>Configuration for <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>.\nNote that the <a href=\"#!/api/Ext.fx.Anim-cfg-to\" rel=\"Ext.fx.Anim-cfg-to\" class=\"docClass\">to</a> config is required.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>this</p>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "anim"
      ],
      "id": "method-animate",
      "owner": "Ext.util.Animate",
      "short_doc": "Performs custom animation on this object. ..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "captureArgs",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 127
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "o",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-captureArgs",
      "owner": "Ext.util.Observable",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "clearListeners",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 729
        }
      ],
      "doc": "<p>Removes all listeners for this object including the managed listeners</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "clearManagedListeners"
      ],
      "id": "method-clearListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes all listeners for this object including the managed listeners ..."
    },
    {
      "tagname": "method",
      "name": "clearManagedListeners",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 760
        }
      ],
      "doc": "<p>Removes all managed listeners for this object.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeManagedListenerItem"
      ],
      "id": "method-clearManagedListeners",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes all managed listeners for this object. ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "continueFireEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 456
        }
      ],
      "doc": "<p>Continue to fire event.</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "args",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "bubbles",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBubbleParent"
      ],
      "id": "method-continueFireEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Continue to fire event. ..."
    },
    {
      "tagname": "method",
      "name": "createRelayer",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 981
        }
      ],
      "doc": "<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "newName",
          "doc": "<p>The name under which to refire the passed parameters.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Array",
          "name": "beginEnd",
          "optional": true,
          "doc": "<p>The caller can specify on which indices to slice.</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
        }
      ],
      "return": {
        "type": "Function",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
      },
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-createRelayer",
      "owner": "Ext.util.Observable",
      "short_doc": "Creates an event handling function which refires the event from this object as the passed event name. ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 623
        }
      ],
      "doc": "<p>Removes the sprite and clears all listeners.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [
        "<a href=\"#!/api/Ext.draw.Sprite-event-beforedestroy\" rel=\"Ext.draw.Sprite-event-beforedestroy\" class=\"docClass\">beforedestroy</a>",
        "<a href=\"#!/api/Ext.draw.Sprite-event-destroy\" rel=\"Ext.draw.Sprite-event-destroy\" class=\"docClass\">destroy</a>"
      ],
      "method_calls": [
        "clearListeners",
        "fireEvent",
        "remove"
      ],
      "id": "method-destroy",
      "owner": "Ext.draw.Sprite",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.Base",
          "link": "<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"
        }
      ],
      "short_doc": "Removes the sprite and clears all listeners. ..."
    },
    {
      "tagname": "method",
      "name": "enableBubble",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 995
        }
      ],
      "doc": "<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/String[]",
          "name": "eventNames",
          "doc": "<p>The event name to bubble, or an Array of event names.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-enableBubble",
      "owner": "Ext.util.Observable",
      "short_doc": "Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ..."
    },
    {
      "tagname": "method",
      "name": "fireEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 416
        }
      ],
      "doc": "<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to fire.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object...",
          "name": "args",
          "doc": "<p>Variable number of parameters are passed to handlers.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>returns false if any of the handlers return false otherwise it returns true.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "fireEventArgs"
      ],
      "id": "method-fireEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList..."
    },
    {
      "tagname": "method",
      "name": "fireEventArgs",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 431
        }
      ],
      "doc": "<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to fire.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object[]",
          "name": "args",
          "doc": "<p>An array of parameters which are passed to handlers.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>returns false if any of the handlers return false otherwise it returns true.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "continueFireEvent"
      ],
      "id": "method-fireEventArgs",
      "owner": "Ext.util.Observable",
      "short_doc": "Fires the specified event with the passed parameter list. ..."
    },
    {
      "tagname": "method",
      "name": "getActiveAnimation",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 372
        }
      ],
      "doc": "<p>Returns the current animation if this object has any effects actively running or queued, else returns false.</p>\n",
      "return": {
        "type": "Ext.fx.Anim/Boolean",
        "name": "return",
        "doc": "<p>Anim if element has active effects, else false</p>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getActiveAnimation",
      "owner": "Ext.util.Animate",
      "short_doc": "Returns the current animation if this object has any effects actively running or queued, else returns false. ..."
    },
    {
      "tagname": "method",
      "name": "getBBox",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 569
        }
      ],
      "doc": "<p>Retrieves the bounding box of the sprite.\nThis will be returned as an object with x, y, width, and height properties.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>bbox</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getBBox",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Retrieves the bounding box of the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "getBubbleParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 489
        }
      ],
      "doc": "<p>Gets the bubbling parent for an Observable</p>\n",
      "private": true,
      "return": {
        "type": "Ext.util.Observable",
        "name": "return",
        "doc": "<p>The bubble parent. null is returned if no bubble target exists</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
      },
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBubbleTarget"
      ],
      "id": "method-getBubbleParent",
      "owner": "Ext.util.Observable",
      "short_doc": "Gets the bubbling parent for an Observable ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "hasActiveFx",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 365
        }
      ],
      "doc": "<p>Returns the current animation if this object has any effects actively running or queued, else returns false.</p>\n",
      "deprecated": {
        "text": "<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-getActiveAnimation\" rel=\"Ext.util.Animate-method-getActiveAnimation\" class=\"docClass\">getActiveAnimation</a></p>\n",
        "version": "4.0"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-hasActiveFx",
      "owner": "Ext.util.Animate",
      "return": {
        "type": "Ext.fx.Anim/Boolean",
        "name": "return",
        "doc": "<p>Anim if element has active effects, else false</p>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "throws": null,
      "type": null,
      "short_doc": "Returns the current animation if this object has any effects actively running or queued, else returns false. ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "hasListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 833
        }
      ],
      "doc": "<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The name of the event to check for</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ..."
    },
    {
      "tagname": "method",
      "name": "hide",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 582
        }
      ],
      "doc": "<p>Hides the sprite.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "redraw",
          "doc": "<p>Flag to immediately draw the change.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": [

      ],
      "method_calls": [
        "setAttributes"
      ],
      "id": "method-hide",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Hides the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "mon",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1134
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item to which to add a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-mon",
      "owner": "Ext.util.Observable",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for addManagedListener. ..."
    },
    {
      "tagname": "method",
      "name": "mun",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1140
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item from which to remove a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-mun",
      "owner": "Ext.util.Observable",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for removeManagedListener. ..."
    },
    {
      "tagname": "method",
      "name": "on",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1122
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "eventName",
          "doc": "<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "options",
          "optional": true,
          "doc": "<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Object",
              "name": "scope",
              "doc": "<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "delay",
              "doc": "<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "single",
              "doc": "<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "buffer",
              "doc": "<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            },
            {
              "tagname": "params",
              "type": "Ext.util.Observable",
              "name": "target",
              "doc": "<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"
            },
            {
              "tagname": "params",
              "type": "String",
              "name": "element",
              "doc": "<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
            },
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "destroyable",
              "default": "false",
              "optional": true,
              "doc": "<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Number",
              "name": "priority",
              "optional": true,
              "doc": "<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n",
              "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-on",
      "owner": "Ext.util.Observable",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for addListener. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onRemove",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 619
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 619,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onRemove",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "prepareClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 164
        }
      ],
      "doc": "<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Function",
          "name": "T",
          "doc": "<p>The class constructor to prepare.</p>\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-prepareClass",
      "owner": "Ext.util.Observable",
      "short_doc": "Prepares a given class for observable instances. ..."
    },
    {
      "tagname": "method",
      "name": "redraw",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 636
        }
      ],
      "doc": "<p>Redraws the sprite.</p>\n",
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-redraw",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Redraws the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "relayEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 928
        }
      ],
      "doc": "<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "origin",
          "doc": "<p>The Observable whose events this object is to relay.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String[]",
          "name": "events",
          "doc": "<p>Array of event names to relay.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "prefix",
          "optional": true,
          "doc": "<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "createRelayer",
        "mon"
      ],
      "id": "method-relayEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Relays selected events from the specified Observable as if the events were fired by this. ..."
    },
    {
      "tagname": "method",
      "name": "remove",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 606
        }
      ],
      "doc": "<p>Removes the sprite.</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>True if sprite was successfully removed.\nFalse when there was no surface to remove it from.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-remove",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Removes the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "removeCls",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 667
        }
      ],
      "doc": "<p>Removes one or more CSS classes from the element.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/String[]",
          "name": "className",
          "doc": "<p>The CSS class to remove, or an array of classes.  Note this method\nis severly limited in VML.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-removeCls",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Removes one or more CSS classes from the element. ..."
    },
    {
      "tagname": "method",
      "name": "removeListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 688
        }
      ],
      "doc": "<p>Removes an event handler.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The type of event the handler was associated with.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> call.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeListener"
      ],
      "id": "method-removeListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes an event handler. ..."
    },
    {
      "tagname": "method",
      "name": "removeManagedListener",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 375
        }
      ],
      "doc": "<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.util.Observable/Ext.Element",
          "name": "item",
          "doc": "<p>The item from which to remove a listener/listeners.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/String",
          "name": "ename",
          "doc": "<p>The event name, or an object containing event name properties.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "removeManagedListener",
        "removeManagedListenerItem"
      ],
      "id": "method-removeManagedListener",
      "owner": "Ext.util.Observable",
      "short_doc": "Removes listeners that were added by the mon method. ..."
    },
    {
      "tagname": "method",
      "name": "removeManagedListenerItem",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 775
        }
      ],
      "doc": "<p>Remove a single managed listener item</p>\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "isClear",
          "doc": "<p>True if this is being called during a clear</p>\n\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "managedListener",
          "doc": "<p>The managed listener item\nSee removeManagedListener for other args</p>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-removeManagedListenerItem",
      "owner": "Ext.util.Observable",
      "overrides": [
        {
          "name": "removeManagedListenerItem",
          "owner": "Ext.AbstractComponent",
          "link": "<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>"
        }
      ],
      "short_doc": "Remove a single managed listener item ..."
    },
    {
      "tagname": "method",
      "name": "resumeEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 881
        }
      ],
      "doc": "<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String...",
          "name": "eventName",
          "doc": "<p>Multiple event names to resume.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-resumeEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Resumes firing of the named event(s). ..."
    },
    {
      "tagname": "method",
      "name": "resumeEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 905
        }
      ],
      "doc": "<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-resumeEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Resumes firing events (see suspendEvents). ..."
    },
    {
      "tagname": "method",
      "name": "sequenceFx",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 353
        }
      ],
      "doc": "<p>Ensures that all effects queued after sequenceFx is called on this object are run in sequence. This is the\nopposite of <a href=\"#!/api/Ext.util.Animate-method-syncFx\" rel=\"Ext.util.Animate-method-syncFx\" class=\"docClass\">syncFx</a>.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-sequenceFx",
      "owner": "Ext.util.Animate",
      "short_doc": "Ensures that all effects queued after sequenceFx is called on this object are run in sequence. ..."
    },
    {
      "tagname": "method",
      "name": "setAttributes",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Change the attributes of the sprite.</p>\n\n<h2>Translation</h2>\n\n<p>For translate, the configuration object contains x and y attributes that indicate where to\ntranslate the object. For example:</p>\n\n<pre><code>sprite.setAttributes({\n  translate: {\n   x: 10,\n   y: 10\n  }\n}, true);\n</code></pre>\n\n<h2>Rotation</h2>\n\n<p>For rotation, the configuration object contains x and y attributes for the center of the rotation (which are optional),\nand a <code>degrees</code> attribute that specifies the rotation in degrees. For example:</p>\n\n<pre><code>sprite.setAttributes({\n  rotate: {\n   degrees: 90\n  }\n}, true);\n</code></pre>\n\n<p>That example will create a 90 degrees rotation using the centroid of the Sprite as center of rotation, whereas:</p>\n\n<pre><code>sprite.setAttributes({\n  rotate: {\n   x: 0,\n   y: 0,\n   degrees: 90\n  }\n}, true);\n</code></pre>\n\n<p>will create a rotation around the <code>(0, 0)</code> axis.</p>\n\n<h2>Scaling</h2>\n\n<p>For scaling, the configuration object contains x and y attributes for the x-axis and y-axis scaling. For example:</p>\n\n<pre><code>sprite.setAttributes({\n  scale: {\n   x: 10,\n   y: 3\n  }\n}, true);\n</code></pre>\n\n<p>You can also specify the center of scaling by adding <code>cx</code> and <code>cy</code> as properties:</p>\n\n<pre><code>sprite.setAttributes({\n  scale: {\n   cx: 0,\n   cy: 0,\n   x: 10,\n   y: 3\n  }\n}, true);\n</code></pre>\n\n<p>That last example will scale a sprite taking as centers of scaling the <code>(0, 0)</code> coordinate.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "attrs",
          "doc": "<p>attributes to be changed on the sprite.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "redraw",
          "doc": "<p>Flag to immediately draw the change.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": [

      ],
      "method_calls": [
        "redraw"
      ],
      "id": "method-setAttributes",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Change the attributes of the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "setStyle",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 645
        }
      ],
      "doc": "<p>Wrapper for setting style properties, also takes single object parameter of multiple styles.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "property",
          "doc": "<p>The style property to be set, or an object of multiple styles.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "value",
          "optional": true,
          "doc": "<p>The value to apply to the given property, or null if an object was passed.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setStyle",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Wrapper for setting style properties, also takes single object parameter of multiple styles. ..."
    },
    {
      "tagname": "method",
      "name": "setText",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 578
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 578,
      "params": [
        {
          "name": "text",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setText",
      "owner": "Ext.draw.Sprite",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "show",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 594
        }
      ],
      "doc": "<p>Shows the sprite.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "redraw",
          "doc": "<p>Flag to immediately draw the change.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "return": {
        "type": "Ext.draw.Sprite",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": [

      ],
      "method_calls": [
        "setAttributes"
      ],
      "id": "method-show",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Shows the sprite. ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "stopAnimation",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 331
        }
      ],
      "doc": "<p>Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.</p>\n",
      "return": {
        "type": "Ext.Element",
        "name": "return",
        "doc": "<p>The Element</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-stopAnimation",
      "owner": "Ext.util.Animate",
      "short_doc": "Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat ..."
    },
    {
      "tagname": "method",
      "name": "stopFx",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 322
        }
      ],
      "doc": "<p>Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.</p>\n",
      "deprecated": {
        "text": "<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-stopAnimation\" rel=\"Ext.util.Animate-method-stopAnimation\" class=\"docClass\">stopAnimation</a></p>\n",
        "version": "4.0"
      },
      "return": {
        "type": "Ext.Element",
        "name": "return",
        "doc": "<p>The Element</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-stopFx",
      "owner": "Ext.util.Animate",
      "short_doc": "Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat ..."
    },
    {
      "tagname": "method",
      "name": "suspendEvent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 857
        }
      ],
      "doc": "<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String...",
          "name": "eventName",
          "doc": "<p>Multiple event names to suspend.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-suspendEvent",
      "owner": "Ext.util.Observable",
      "short_doc": "Suspends firing of the named event(s). ..."
    },
    {
      "tagname": "method",
      "name": "suspendEvents",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 844
        }
      ],
      "doc": "<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "queueSuspended",
          "doc": "<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-suspendEvents",
      "owner": "Ext.util.Observable",
      "short_doc": "Suspends the firing of all events. ..."
    },
    {
      "tagname": "method",
      "name": "syncFx",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Animate.js",
          "linenr": 341
        }
      ],
      "doc": "<p>Ensures that all effects queued after syncFx is called on this object are run concurrently. This is the opposite\nof <a href=\"#!/api/Ext.util.Animate-method-sequenceFx\" rel=\"Ext.util.Animate-method-sequenceFx\" class=\"docClass\">sequenceFx</a>.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-syncFx",
      "owner": "Ext.util.Animate",
      "short_doc": "Ensures that all effects queued after syncFx is called on this object are run concurrently. ..."
    },
    {
      "tagname": "method",
      "name": "un",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/util/Observable.js",
          "linenr": 1128
        }
      ],
      "doc": "<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "eventName",
          "doc": "<p>The type of event the handler was associated with.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Function",
          "name": "fn",
          "doc": "<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> call.</strong></p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "scope",
          "optional": true,
          "doc": "<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-un",
      "owner": "Ext.util.Observable",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Shorthand for removeListener. ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "event",
      "name": "beforedestroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 312
        }
      ],
      "doc": "<p>Fires before the sprite is destroyed. Return false from an event handler to stop the destroy.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.draw.Sprite",
          "name": "this",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-beforedestroy",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Fires before the sprite is destroyed. ..."
    },
    {
      "tagname": "event",
      "name": "click",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 355
        }
      ],
      "doc": "<p>Fires when a mouse click is detected within the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-click",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mouse click is detected within the element. ..."
    },
    {
      "tagname": "event",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 318
        }
      ],
      "doc": "<p>Fires after the sprite is destroyed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.draw.Sprite",
          "name": "this",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-destroy",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Fires after the sprite is destroyed. ..."
    },
    {
      "tagname": "event",
      "name": "mousedown",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 330
        }
      ],
      "doc": "<p>Fires when a mousedown is detected within the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-mousedown",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mousedown is detected within the element. ..."
    },
    {
      "tagname": "event",
      "name": "mousemove",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 350
        }
      ],
      "doc": "<p>Fires when a mousemove is detected with the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-mousemove",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mousemove is detected with the element. ..."
    },
    {
      "tagname": "event",
      "name": "mouseout",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 345
        }
      ],
      "doc": "<p>Fires when a mouseout is detected with the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-mouseout",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mouseout is detected with the element. ..."
    },
    {
      "tagname": "event",
      "name": "mouseover",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 340
        }
      ],
      "doc": "<p>Fires when a mouseover is detected within the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-mouseover",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mouseover is detected within the element. ..."
    },
    {
      "tagname": "event",
      "name": "mouseup",
      "autodetected": {
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 335
        }
      ],
      "doc": "<p>Fires when a mouseup is detected within the element.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "tagname": "params",
          "type": "Ext.EventObject",
          "name": "e",
          "doc": "<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n\n\n\n",
          "html_type": "<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"
        },
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "t",
          "doc": "<p>The target of the event.</p>\n\n\n\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-mouseup",
      "owner": "Ext.draw.Sprite",
      "return": null,
      "throws": null,
      "type": null,
      "short_doc": "Fires when a mouseup is detected within the element. ..."
    },
    {
      "tagname": "event",
      "name": "render",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/draw/Sprite.js",
          "linenr": 324
        }
      ],
      "doc": "<p>Fires after the sprite markup is rendered.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.draw.Sprite",
          "name": "this",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "id": "event-render",
      "owner": "Ext.draw.Sprite",
      "short_doc": "Fires after the sprite markup is rendered. ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.draw.Sprite",
  "short_doc": "A Sprite is an object rendered in a Drawing surface. ..."
}