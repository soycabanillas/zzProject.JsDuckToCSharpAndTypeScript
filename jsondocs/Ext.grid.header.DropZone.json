{
  "tagname": "class",
  "name": "Ext.grid.header.DropZone",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
      "linenr": 21
    }
  ],
  "doc": "\n",
  "private": true,
  "aliases": {
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.dd.DropZone",
  "mixins": [

  ],
  "requires": [

  ],
  "uses": [

  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "ddGroup",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 47
        }
      ],
      "doc": "<p>A named drag drop group to which this object belongs.  If a group is specified, then this object will only\ninteract with other drag drop objects in the same group.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-ddGroup",
      "owner": "Ext.dd.DropTarget",
      "short_doc": "A named drag drop group to which this object belongs. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "dropAllowed",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 56
        }
      ],
      "doc": "<p>The CSS class returned to the drag source when drop is allowed.</p>\n",
      "type": "String",
      "default": "Ext.baseCSSPrefix + 'dd-drop-ok'",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-dropAllowed",
      "owner": "Ext.dd.DropTarget",
      "short_doc": "The CSS class returned to the drag source when drop is allowed. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "dropNotAllowed",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 61
        }
      ],
      "doc": "<p>The CSS class returned to the drag source when drop is not allowed.</p>\n",
      "type": "String",
      "default": "Ext.baseCSSPrefix + 'dd-drop-nodrop'",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-dropNotAllowed",
      "owner": "Ext.dd.DropTarget",
      "short_doc": "The CSS class returned to the drag source when drop is not allowed. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "overClass",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 52
        }
      ],
      "doc": "<p>The CSS class applied to the drop target element while the drag source is over it.</p>\n",
      "type": "String",
      "default": "\"\"",
      "properties": null,
      "id": "cfg-overClass",
      "owner": "Ext.dd.DropTarget",
      "short_doc": "The CSS class applied to the drop target element while the drag source is over it. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "__ygDragDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 238
        }
      ],
      "doc": "<p>Internal typeof flag</p>\n",
      "default": "true",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "readonly": null,
      "id": "property-__ygDragDrop",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Internal typeof flag ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "_domRef",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 231
        }
      ],
      "doc": "<p>Cached reference to the linked element</p>\n",
      "default": null,
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "readonly": null,
      "id": "property-_domRef",
      "owner": "Ext.dd.DragDrop",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "available",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 320
        }
      ],
      "doc": "<p>The available property is false until the linked dom element is accessible.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-available",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The available property is false until the linked dom element is accessible. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "colHeaderCls",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 26
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 26,
      "type": "String",
      "default": "Ext.baseCSSPrefix + 'column-header'",
      "readonly": null,
      "id": "property-colHeaderCls",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "config",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 105
        }
      ],
      "doc": "<p>Configuration attributes passed into the constructor</p>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-config",
      "owner": "Ext.dd.DragDrop",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "constrainX",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 245
        }
      ],
      "doc": "<p>Set to true when horizontal contraints are applied</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-constrainX",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Set to true when horizontal contraints are applied ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "constrainY",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 252
        }
      ],
      "doc": "<p>Set to true when vertical contraints are applied</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-constrainY",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Set to true when vertical contraints are applied ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "defaultPadding",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 465
        }
      ],
      "doc": "<p>Provides default constraint padding to \"constrainTo\" elements.</p>\n",
      "type": "Object",
      "default": "{left: 0, right: 0, top: 0, bottom: 0}",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-defaultPadding",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Provides default constraint padding to \"constrainTo\" elements. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "dragElId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 111
        }
      ],
      "doc": "<p>The id of the element that will be dragged.  By default this is same\nas the linked element, but could be changed to another element. Ex:\n<a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-dragElId",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The id of the element that will be dragged. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "groups",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 176
        }
      ],
      "doc": "<p>The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get events when interacting with other\nDragDrop object in the same group.  This lets us define multiple\ngroups using a single DragDrop subclass if we want.</p>\n\n<p>An object in the format {'group1':true, 'group2':true}</p>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-groups",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The group defines a logical collection of DragDrop objects that are\nrelated. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "handleElId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 120
        }
      ],
      "doc": "<p>The ID of the element that initiates the drag operation.  By default\nthis is the linked element, but could be changed to be a child of this\nelement.  This lets us do things like only starting the drag when the\nheader element within the linked html element is clicked.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-handleElId",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The ID of the element that initiates the drag operation. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "hasOuterHandles",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 326
        }
      ],
      "doc": "<p>By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is.  This is done in part to work around a\nbug in some browsers that mis-report the mousedown if the previous\nmouseup happened outside of the window.  This property is set to true\nif outer handles are defined. Defaults to false.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-hasOuterHandles",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "id",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 96
        }
      ],
      "doc": "<p>The id of the element associated with this object.  This is what we\nrefer to as the \"linked element\" because the size and position of\nthis element is used to determine when the drag and drop objects have\ninteracted.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-id",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The id of the element associated with this object. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "ignoreSelf",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 89
        }
      ],
      "doc": "<p>Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. Defaults to true - DragDrop objects do not by default\nfire drag events to themselves.</p>\n",
      "type": "Boolean",
      "default": null,
      "properties": null,
      "id": "property-ignoreSelf",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "invalidHandleClasses",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 154
        }
      ],
      "doc": "<p>An Array of CSS class names for elements to be considered in valid as drag handles.</p>\n",
      "type": "String[]",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-invalidHandleClasses",
      "owner": "Ext.dd.DragDrop",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"
    },
    {
      "tagname": "property",
      "name": "invalidHandleIds",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 142
        }
      ],
      "doc": "<p>An object who's property names identify the IDs of elements to be considered invalid as drag handles.\nA non-null property value identifies the ID as invalid. For example, to prevent\ndragging from being initiated on element ID \"foo\", use:</p>\n\n<pre><code>{\n    foo: true\n}\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-invalidHandleIds",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "An object who's property names identify the IDs of elements to be considered invalid as drag handles. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "invalidHandleTypes",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 130
        }
      ],
      "doc": "<p>An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non-null property value identifies the tag as invalid. Defaults to the\nfollowing value which prevents drag operations from being initiated by <code>&lt;a&gt;</code> elements:</p>\n\n<pre><code>{\n    A: \"A\"\n}\n</code></pre>\n",
      "type": "Object",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-invalidHandleTypes",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "An object who's property names identify HTML tags to be considered invalid as drag handles. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isNotifyTarget",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 70
        }
      ],
      "doc": "<p>private</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isNotifyTarget",
      "owner": "Ext.dd.DropTarget",
      "short_doc": "private ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isTarget",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 67
        }
      ],
      "doc": "<p>private</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isTarget",
      "owner": "Ext.dd.DropTarget",
      "properties": null,
      "overrides": [
        {
          "name": "isTarget",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-property-isTarget\" rel=\"Ext.dd.DragDrop-property-isTarget\" class=\"docClass\">Ext.dd.DragDrop.isTarget</a>"
        }
      ],
      "short_doc": "private ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "locked",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 187
        }
      ],
      "doc": "<p>Individual drag/drop instances can be locked.  This will prevent\nonmousedown start drag.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-locked",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Individual drag/drop instances can be locked. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "maintainOffset",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 287
        }
      ],
      "doc": "<p>Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element relative to its parent to stay the same\nwhen the page changes</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-maintainOffset",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Maintain offsets when we resetconstraints. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "maxX",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 266
        }
      ],
      "doc": "<p>The right constraint</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-maxX",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The right constraint ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "maxY",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 280
        }
      ],
      "doc": "<p>The down constraint</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-maxY",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The down constraint ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "minX",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 259
        }
      ],
      "doc": "<p>The left constraint</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-minX",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The left constraint ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "minY",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 273
        }
      ],
      "doc": "<p>The up constraint</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-minY",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The up constraint ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "moveOnly",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 202
        }
      ],
      "doc": "<p>When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is dragged over them.</p>\n",
      "type": "Boolean",
      "default": "false",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-moveOnly",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "padding",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 223
        }
      ],
      "doc": "<p>The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object.\nAn array containing the 4 padding values: [top, right, bottom, left]</p>\n",
      "type": "Number[]",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-padding",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"
    },
    {
      "tagname": "property",
      "name": "primaryButtonOnly",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 311
        }
      ],
      "doc": "<p>By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed mouse).  Set to true to\nallow drag and drop to start with any mouse click that is propogated\nby the browser</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-primaryButtonOnly",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed m...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "proxyOffsets",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 27
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 27,
      "type": "Object",
      "default": null,
      "readonly": null,
      "id": "property-proxyOffsets",
      "owner": "Ext.grid.header.DropZone",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "startPageX",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 160
        }
      ],
      "doc": "<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-startPageX",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The linked element's absolute X position at the time the drag was\nstarted ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "startPageY",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 168
        }
      ],
      "doc": "<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n",
      "type": "Number",
      "default": "0",
      "properties": null,
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-startPageY",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "The linked element's absolute X position at the time the drag was\nstarted ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
    },
    {
      "tagname": "property",
      "name": "xTicks",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 295
        }
      ],
      "doc": "<p>Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n",
      "type": "Number[]",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-xTicks",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"
    },
    {
      "tagname": "property",
      "name": "yTicks",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 303
        }
      ],
      "doc": "<p>Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n",
      "type": "Number[]",
      "default": null,
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-yTicks",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval. ...",
      "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "constructor",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 29
        }
      ],
      "doc": "<p>Creates new DropTarget.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 29,
      "params": [
        {
          "name": "headerCt",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent",
        "getDDGroup"
      ],
      "id": "method-constructor",
      "owner": "Ext.grid.header.DropZone",
      "return": {
        "type": "Ext.grid.header.DropZone",
        "doc": "\n",
        "html_type": "<a href=\"#!/api/Ext.grid.header.DropZone\" rel=\"Ext.grid.header.DropZone\" class=\"docClass\">Ext.grid.header.DropZone</a>"
      },
      "overrides": [
        {
          "name": "constructor",
          "owner": "Ext.dd.DropTarget",
          "link": "<a href=\"#!/api/Ext.dd.DropTarget-method-constructor\" rel=\"Ext.dd.DropTarget-method-constructor\" class=\"docClass\">Ext.dd.DropTarget.constructor</a>"
        }
      ],
      "short_doc": "Creates new DropTarget. ..."
    },
    {
      "tagname": "method",
      "name": "addInvalidHandleClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 157
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-addInvalidHandleClass",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "addInvalidHandleClass",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-addInvalidHandleClass\" rel=\"Ext.dd.DragDrop-method-addInvalidHandleClass\" class=\"docClass\">Ext.dd.DragDrop.addInvalidHandleClass</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "addInvalidHandleId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 162
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-addInvalidHandleId",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "addInvalidHandleId",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-addInvalidHandleId\" rel=\"Ext.dd.DragDrop-method-addInvalidHandleId\" class=\"docClass\">Ext.dd.DragDrop.addInvalidHandleId</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "addInvalidHandleType",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 167
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-addInvalidHandleType",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "addInvalidHandleType",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-addInvalidHandleType\" rel=\"Ext.dd.DragDrop-method-addInvalidHandleType\" class=\"docClass\">Ext.dd.DragDrop.addInvalidHandleType</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "addToGroup",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 706
        }
      ],
      "doc": "<p>Adds this instance to a group of related drag/drop objects.  All\ninstances belong to at least one group, and can belong to as many\ngroups as needed.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "sGroup",
          "doc": "<p>the name of the group</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-addToGroup",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Adds this instance to a group of related drag/drop objects. ..."
    },
    {
      "tagname": "method",
      "name": "applyConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 615
        }
      ],
      "doc": "<p>Applies the configuration parameters that were passed into the constructor.\nThis is supposed to happen at each level through the inheritance chain.  So\na DDProxy implentation will execute apply config on DDProxy, DD, and\nDragDrop in order to get all of the parameters that are available in\neach object.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-applyConfig",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Applies the configuration parameters that were passed into the constructor. ..."
    },
    {
      "tagname": "method",
      "name": "b4Drag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 350
        }
      ],
      "doc": "<p>Code that executes immediately before the onDrag event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4Drag",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the onDrag event ..."
    },
    {
      "tagname": "method",
      "name": "b4DragDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 404
        }
      ],
      "doc": "<p>Code that executes immediately before the onDragDrop event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4DragDrop",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the onDragDrop event ..."
    },
    {
      "tagname": "method",
      "name": "b4DragOut",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 389
        }
      ],
      "doc": "<p>Code that executes immediately before the onDragOut event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4DragOut",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the onDragOut event ..."
    },
    {
      "tagname": "method",
      "name": "b4DragOver",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Code that executes immediately before the onDragOver event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4DragOver",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the onDragOver event ..."
    },
    {
      "tagname": "method",
      "name": "b4EndDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 427
        }
      ],
      "doc": "<p>Code that executes immediately before the endDrag event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4EndDrag",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the endDrag event ..."
    },
    {
      "tagname": "method",
      "name": "b4MouseDown",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 439
        }
      ],
      "doc": "<p>Code executed immediately before the onMouseDown event</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>the mousedown event</p>\n",
          "html_type": "Event"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4MouseDown",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code executed immediately before the onMouseDown event ..."
    },
    {
      "tagname": "method",
      "name": "b4StartDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 336
        }
      ],
      "doc": "<p>Code that executes immediately before the startDrag event</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "x",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "y",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-b4StartDrag",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Code that executes immediately before the startDrag event ..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "clearConstraints",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 127
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-clearConstraints",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "clearConstraints",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-clearConstraints\" rel=\"Ext.dd.DragDrop-method-clearConstraints\" class=\"docClass\">Ext.dd.DragDrop.clearConstraints</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "clearTicks",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 132
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-clearTicks",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "clearTicks",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-clearTicks\" rel=\"Ext.dd.DragDrop-method-clearTicks\" class=\"docClass\">Ext.dd.DragDrop.clearTicks</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "clickValidator",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 826
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 826,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "isValidHandleChild"
      ],
      "id": "method-clickValidator",
      "owner": "Ext.dd.DragDrop",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "constrainTo",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 476
        }
      ],
      "doc": "<p>Initializes the drag drop object's constraints to restrict movement to a certain element.</p>\n\n<p>Usage:</p>\n\n<pre><code>var dd = new <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>(\"dragDiv1\", \"proxytest\",\n               { dragElId: \"existingProxyDiv\" });\ndd.startDrag = function(){\n    this.constrainTo(\"parent-id\");\n};\n</code></pre>\n\n<p>Or you can initalize it using the <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> object:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"dragDiv1\").initDDProxy(\"proxytest\", {dragElId: \"existingProxyDiv\"}, {\n    startDrag : function(){\n        this.constrainTo(\"parent-id\");\n    }\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/HTMLElement/Ext.Element",
          "name": "constrainTo",
          "doc": "<p>The element or element ID to constrain to.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"
        },
        {
          "tagname": "params",
          "type": "Object/Number",
          "name": "pad",
          "optional": true,
          "doc": "<p>Pad provides a way to specify \"padding\" of the constraints,\nand can be either a number for symmetrical padding (4 would be equal to <code>{left:4, right:4, top:4, bottom:4}</code>) or\nan object containing the sides to pad. For example: <code>{right:10, bottom:10}</code></p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Boolean",
          "name": "inContent",
          "optional": true,
          "doc": "<p>Constrain the draggable in the content box of the element (inside padding and borders)</p>\n",
          "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getEl",
        "resetConstraints",
        "setXConstraint",
        "setYConstraint"
      ],
      "id": "method-constrainTo",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Initializes the drag drop object's constraints to restrict movement to a certain element. ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropTarget.js",
          "linenr": 136
        }
      ],
      "doc": "<p>Destroy this DragDrop instance</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 136,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent"
      ],
      "id": "method-destroy",
      "owner": "Ext.dd.DropTarget",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-destroy\" rel=\"Ext.dd.DragDrop-method-destroy\" class=\"docClass\">Ext.dd.DragDrop.destroy</a>"
        }
      ],
      "short_doc": "Destroy this DragDrop instance ..."
    },
    {
      "tagname": "method",
      "name": "endDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 67
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-endDrag",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "endDrag",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-endDrag\" rel=\"Ext.dd.DragDrop-method-endDrag\" class=\"docClass\">Ext.dd.DragDrop.endDrag</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "getBottomIndicator",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 54
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 54,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getBottomIndicator",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getDDGroup",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 35
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 35,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getDDGroup",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getDragEl",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 52
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-getDragEl",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "getDragEl",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-getDragEl\" rel=\"Ext.dd.DragDrop-method-getDragEl\" class=\"docClass\">Ext.dd.DragDrop.getDragEl</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "getEl",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 535
        }
      ],
      "doc": "<p>Returns a reference to the linked element</p>\n",
      "return": {
        "type": "HTMLElement",
        "name": "return",
        "doc": "<p>the html element</p>\n",
        "properties": null,
        "html_type": "HTMLElement"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getEl",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Returns a reference to the linked element ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "getLocation",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 64
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 64,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "t",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getLocation",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getTargetFromEvent",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 39
        }
      ],
      "doc": "<p>Returns a custom data object associated with the DOM node that is the target of the event.  By default\nthis looks up the event target in the <a href=\"#!/api/Ext.dd.Registry\" rel=\"Ext.dd.Registry\" class=\"docClass\">Ext.dd.Registry</a>, although you can override this method to\nprovide your own custom lookup.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 39,
      "params": [
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getTargetFromEvent",
      "owner": "Ext.grid.header.DropZone",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>data The custom data</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "overrides": [
        {
          "name": "getTargetFromEvent",
          "owner": "Ext.dd.DropZone",
          "link": "<a href=\"#!/api/Ext.dd.DropZone-method-getTargetFromEvent\" rel=\"Ext.dd.DropZone-method-getTargetFromEvent\" class=\"docClass\">Ext.dd.DropZone.getTargetFromEvent</a>"
        }
      ],
      "short_doc": "Returns a custom data object associated with the DOM node that is the target of the event. ..."
    },
    {
      "tagname": "method",
      "name": "getTick",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 1079
        }
      ],
      "doc": "<p>Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time.  This method resolves the\nlocation when we have it set up like this.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Number",
          "name": "val",
          "doc": "<p>where we want to place the object</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Number[]",
          "name": "tickArray",
          "doc": "<p>sorted array of valid points</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"
        }
      ],
      "return": {
        "type": "Number",
        "name": "return",
        "doc": "<p>the closest tick</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
      },
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getTick",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time. ..."
    },
    {
      "tagname": "method",
      "name": "getTopIndicator",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 43
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 43,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getTopIndicator",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "handleMouseDown",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 797
        }
      ],
      "doc": "<p>Called when this object is clicked</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Ext.dd.DragDrop",
          "name": "oDD",
          "doc": "<p>the clicked dd object (this dd obj)</p>\n\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "b4MouseDown",
        "clickValidator",
        "isLocked",
        "onMouseDown",
        "setStartPosition"
      ],
      "id": "method-handleMouseDown",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Called when this object is clicked ..."
    },
    {
      "tagname": "method",
      "name": "handleOnAvailable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 633
        }
      ],
      "doc": "<p>Executed when the linked element is available</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "onAvailable",
        "resetConstraints"
      ],
      "id": "method-handleOnAvailable",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Executed when the linked element is available ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "hideIndicators",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 209
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 209,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBottomIndicator",
        "getTopIndicator"
      ],
      "id": "method-hideIndicators",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "init",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 557
        }
      ],
      "doc": "<p>Sets up the DragDrop object.  Must be called in the constructor of any\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a> subclass</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "id",
          "doc": "<p>the id of the linked element</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "sGroup",
          "doc": "<p>the group of related items</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "<p>configuration attributes</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "initTarget"
      ],
      "id": "method-init",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Sets up the DragDrop object. ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "initTarget",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 570
        }
      ],
      "doc": "<p>Initializes Targeting functionality only... the object does not\nget a mousedown handler.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "id",
          "doc": "<p>the id of the linked element</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "sGroup",
          "doc": "<p>the group of related items</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "<p>configuration attributes</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "addToGroup",
        "applyConfig",
        "handleOnAvailable",
        "setDragElId"
      ],
      "id": "method-initTarget",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Initializes Targeting functionality only... ..."
    },
    {
      "tagname": "method",
      "name": "invalidateDrop",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 163
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 163,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "hideIndicators"
      ],
      "id": "method-invalidateDrop",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "isLocked",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 787
        }
      ],
      "doc": "<p>Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on the page.)</p>\n",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>true if this obj or all drag/drop is locked, else\nfalse</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-isLocked",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on th..."
    },
    {
      "tagname": "method",
      "name": "isValidHandleChild",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 57
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-isValidHandleChild",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "isValidHandleChild",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-isValidHandleChild\" rel=\"Ext.dd.DragDrop-method-isValidHandleChild\" class=\"docClass\">Ext.dd.DragDrop.isValidHandleChild</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "lock",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 195
        }
      ],
      "doc": "<p>Locks this instance</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-lock",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Locks this instance ..."
    },
    {
      "tagname": "method",
      "name": "notifyDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 257
        }
      ],
      "doc": "<p>The function a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> calls once to notify this drop zone that the dragged item has\nbeen dropped on it.  The drag zone will look up the target node based on the event passed in, and if there\nis a node registered for that event, it will delegate to <a href=\"#!/api/Ext.dd.DropZone-method-onNodeDrop\" rel=\"Ext.dd.DropZone-method-onNodeDrop\" class=\"docClass\">onNodeDrop</a> for node-specific handling,\notherwise it will call <a href=\"#!/api/Ext.dd.DropZone-method-onContainerDrop\" rel=\"Ext.dd.DropZone-method-onContainerDrop\" class=\"docClass\">onContainerDrop</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>False if the drop was invalid.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getTargetFromEvent",
        "onContainerDrop",
        "onNodeDrop",
        "onNodeOut"
      ],
      "id": "method-notifyDrop",
      "owner": "Ext.dd.DropZone",
      "overrides": [
        {
          "name": "notifyDrop",
          "owner": "Ext.dd.DropTarget",
          "link": "<a href=\"#!/api/Ext.dd.DropTarget-method-notifyDrop\" rel=\"Ext.dd.DropTarget-method-notifyDrop\" class=\"docClass\">Ext.dd.DropTarget.notifyDrop</a>"
        }
      ],
      "short_doc": "The function a Ext.dd.DragSource calls once to notify this drop zone that the dragged item has\nbeen dropped on it. ..."
    },
    {
      "tagname": "method",
      "name": "notifyEnter",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 192
        }
      ],
      "doc": "<p>The function a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> calls once to notify this drop zone that the source is now over\nthe zone.  The default implementation returns this.dropNotAllowed and expects that only registered drop\nnodes can process drag drop operations, so if you need the drop zone itself to be able to process drops\nyou should override this method and provide a custom implementation.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>status The CSS class that communicates the drop status back to the source so that the\nunderlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a> can be updated</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-notifyEnter",
      "owner": "Ext.dd.DropZone",
      "overrides": [
        {
          "name": "notifyEnter",
          "owner": "Ext.dd.DropTarget",
          "link": "<a href=\"#!/api/Ext.dd.DropTarget-method-notifyEnter\" rel=\"Ext.dd.DropTarget-method-notifyEnter\" class=\"docClass\">Ext.dd.DropTarget.notifyEnter</a>"
        }
      ],
      "short_doc": "The function a Ext.dd.DragSource calls once to notify this drop zone that the source is now over\nthe zone. ..."
    },
    {
      "tagname": "method",
      "name": "notifyOut",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 241
        }
      ],
      "doc": "<p>The function a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> calls once to notify this drop zone that the source has been dragged\nout of the zone without dropping.  If the drag source is currently over a registered node, the notification\nwill be delegated to <a href=\"#!/api/Ext.dd.DropZone-method-onNodeOut\" rel=\"Ext.dd.DropZone-method-onNodeOut\" class=\"docClass\">onNodeOut</a> for node-specific handling, otherwise it will be ignored.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop target</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag zone</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "onNodeOut"
      ],
      "id": "method-notifyOut",
      "owner": "Ext.dd.DropZone",
      "overrides": [
        {
          "name": "notifyOut",
          "owner": "Ext.dd.DropTarget",
          "link": "<a href=\"#!/api/Ext.dd.DropTarget-method-notifyOut\" rel=\"Ext.dd.DropTarget-method-notifyOut\" class=\"docClass\">Ext.dd.DropTarget.notifyOut</a>"
        }
      ],
      "short_doc": "The function a Ext.dd.DragSource calls once to notify this drop zone that the source has been dragged\nout of the zone..."
    },
    {
      "tagname": "method",
      "name": "notifyOver",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 208
        }
      ],
      "doc": "<p>The function a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> calls continuously while it is being dragged over the drop zone.\nThis method will be called on every mouse movement while the drag source is over the drop zone.\nIt will call <a href=\"#!/api/Ext.dd.DropZone-method-onNodeOver\" rel=\"Ext.dd.DropZone-method-onNodeOver\" class=\"docClass\">onNodeOver</a> while the drag source is over a registered node, and will also automatically\ndelegate to the appropriate node-specific methods as necessary when the drag source enters and exits\nregistered nodes (<a href=\"#!/api/Ext.dd.DropZone-method-onNodeEnter\" rel=\"Ext.dd.DropZone-method-onNodeEnter\" class=\"docClass\">onNodeEnter</a>, <a href=\"#!/api/Ext.dd.DropZone-method-onNodeOut\" rel=\"Ext.dd.DropZone-method-onNodeOut\" class=\"docClass\">onNodeOut</a>). If the drag source is not currently over a\nregistered node, it will call <a href=\"#!/api/Ext.dd.DropZone-method-onContainerOver\" rel=\"Ext.dd.DropZone-method-onContainerOver\" class=\"docClass\">onContainerOver</a>.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>status The CSS class that communicates the drop status back to the source so that the\nunderlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a> can be updated</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getTargetFromEvent",
        "onContainerOver",
        "onNodeEnter",
        "onNodeOut",
        "onNodeOver"
      ],
      "id": "method-notifyOver",
      "owner": "Ext.dd.DropZone",
      "overrides": [
        {
          "name": "notifyOver",
          "owner": "Ext.dd.DropTarget",
          "link": "<a href=\"#!/api/Ext.dd.DropTarget-method-notifyOver\" rel=\"Ext.dd.DropTarget-method-notifyOver\" class=\"docClass\">Ext.dd.DropTarget.notifyOver</a>"
        }
      ],
      "short_doc": "The function a Ext.dd.DragSource calls continuously while it is being dragged over the drop zone. ..."
    },
    {
      "tagname": "method",
      "name": "onAvailable",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 458
        }
      ],
      "doc": "<p>Override the onAvailable method to do what is needed after the initial\nposition was determined.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onAvailable",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Override the onAvailable method to do what is needed after the initial\nposition was determined. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onContainerDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 177
        }
      ],
      "doc": "<p>Called when the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> has been dropped on it,\nbut not on any of its registered drop nodes.  The default implementation returns false, so it should be\noverridden to provide the appropriate processing of the drop event if you need the drop zone itself to\nbe able to accept drops.  It should return true when valid so that the drag source's repair action does not run.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>True if the drop was valid, else false</p>\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onContainerDrop",
      "owner": "Ext.dd.DropZone",
      "short_doc": "Called when the DropZone determines that a Ext.dd.DragSource has been dropped on it,\nbut not on any of its registered..."
    },
    {
      "tagname": "method",
      "name": "onContainerOver",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 162
        }
      ],
      "doc": "<p>Called while the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> is being dragged over it,\nbut not over any of its registered drop nodes.  The default implementation returns this.dropNotAllowed, so\nit should be overridden to provide the proper feedback if necessary.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>status The CSS class that communicates the drop status back to the source so that the\nunderlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a> can be updated</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "template": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onContainerOver",
      "owner": "Ext.dd.DropZone",
      "short_doc": "Called while the DropZone determines that a Ext.dd.DragSource is being dragged over it,\nbut not over any of its regis..."
    },
    {
      "tagname": "method",
      "name": "onDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 72
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onDrag",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onDrag",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onDrag\" rel=\"Ext.dd.DragDrop-method-onDrag\" class=\"docClass\">Ext.dd.DragDrop.onDrag</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onDragDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 77
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onDragDrop",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onDragDrop",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onDragDrop\" rel=\"Ext.dd.DragDrop-method-onDragDrop\" class=\"docClass\">Ext.dd.DragDrop.onDragDrop</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onDragEnter",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 82
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onDragEnter",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onDragEnter",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onDragEnter\" rel=\"Ext.dd.DragDrop-method-onDragEnter\" class=\"docClass\">Ext.dd.DragDrop.onDragEnter</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onDragOut",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 87
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onDragOut",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onDragOut",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOut\" rel=\"Ext.dd.DragDrop-method-onDragOut\" class=\"docClass\">Ext.dd.DragDrop.onDragOut</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onDragOver",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 92
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onDragOver",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onDragOver",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOver\" rel=\"Ext.dd.DragDrop-method-onDragOver\" class=\"docClass\">Ext.dd.DragDrop.onDragOver</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onInvalidDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 97
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onInvalidDrop",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onInvalidDrop",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onInvalidDrop\" rel=\"Ext.dd.DragDrop-method-onInvalidDrop\" class=\"docClass\">Ext.dd.DragDrop.onInvalidDrop</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onMouseDown",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 102
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onMouseDown",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onMouseDown",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onMouseDown\" rel=\"Ext.dd.DragDrop-method-onMouseDown\" class=\"docClass\">Ext.dd.DragDrop.onMouseDown</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onMouseUp",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 107
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-onMouseUp",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "onMouseUp",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-onMouseUp\" rel=\"Ext.dd.DragDrop-method-onMouseUp\" class=\"docClass\">Ext.dd.DragDrop.onMouseUp</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "onNodeDrop",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 222
        }
      ],
      "doc": "<p>Called when the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> has been dropped onto\nthe drop node.  The default implementation returns false, so it should be overridden to provide the\nappropriate processing of the drop event and return true so that the drag source's repair action does not run.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 222,
      "params": [
        {
          "name": "node",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "dragZone",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "invalidateDrop",
        "onNodeDrop"
      ],
      "id": "method-onNodeDrop",
      "owner": "Ext.grid.header.DropZone",
      "return": {
        "type": "Boolean",
        "name": "return",
        "doc": "<p>True if the drop was valid, else false</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
      },
      "template": true,
      "overrides": [
        {
          "name": "onNodeDrop",
          "owner": "Ext.dd.DropZone",
          "link": "<a href=\"#!/api/Ext.dd.DropZone-method-onNodeDrop\" rel=\"Ext.dd.DropZone-method-onNodeDrop\" class=\"docClass\">Ext.dd.DropZone.onNodeDrop</a>"
        }
      ],
      "short_doc": "Called when the DropZone determines that a Ext.dd.DragSource has been dropped onto\nthe drop node. ..."
    },
    {
      "tagname": "method",
      "name": "onNodeEnter",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 98
        }
      ],
      "doc": "<p>Called when the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> has entered a drop node\nthat has either been registered or detected by a configured implementation of <a href=\"#!/api/Ext.dd.DropZone-method-getTargetFromEvent\" rel=\"Ext.dd.DropZone-method-getTargetFromEvent\" class=\"docClass\">getTargetFromEvent</a>.\nThis method has no default implementation and should be overridden to provide\nnode-specific processing if necessary.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "nodeData",
          "doc": "<p>The custom data associated with the drop node (this is the same value returned from\n<a href=\"#!/api/Ext.dd.DropZone-method-getTargetFromEvent\" rel=\"Ext.dd.DropZone-method-getTargetFromEvent\" class=\"docClass\">getTargetFromEvent</a> for this node)</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.dd.DragSource",
          "name": "source",
          "doc": "<p>The drag source that was dragged over this drop zone</p>\n",
          "html_type": "<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"
        },
        {
          "tagname": "params",
          "type": "Event",
          "name": "e",
          "doc": "<p>The event</p>\n",
          "html_type": "Event"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>An object containing arbitrary data supplied by the drag source</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onNodeEnter",
      "owner": "Ext.dd.DropZone",
      "short_doc": "Called when the DropZone determines that a Ext.dd.DragSource has entered a drop node\nthat has either been registered ..."
    },
    {
      "tagname": "method",
      "name": "onNodeOut",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Called when the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> has been dragged out of\nthe drop node without dropping.  This method has no default implementation and should be overridden to provide\nnode-specific processing if necessary.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 218,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "hideIndicators"
      ],
      "id": "method-onNodeOut",
      "owner": "Ext.grid.header.DropZone",
      "template": true,
      "overrides": [
        {
          "name": "onNodeOut",
          "owner": "Ext.dd.DropZone",
          "link": "<a href=\"#!/api/Ext.dd.DropZone-method-onNodeOut\" rel=\"Ext.dd.DropZone-method-onNodeOut\" class=\"docClass\">Ext.dd.DropZone.onNodeOut</a>"
        }
      ],
      "short_doc": "Called when the DropZone determines that a Ext.dd.DragSource has been dragged out of\nthe drop node without dropping. ..."
    },
    {
      "tagname": "method",
      "name": "onNodeOver",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 168
        }
      ],
      "doc": "<p>Called while the DropZone determines that a <a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a> is over a drop node\nthat has either been registered or detected by a configured implementation of <a href=\"#!/api/Ext.grid.header.DropZone-method-getTargetFromEvent\" rel=\"Ext.grid.header.DropZone-method-getTargetFromEvent\" class=\"docClass\">getTargetFromEvent</a>.\nThe default implementation returns this.dropAllowed, so it should be\noverridden to provide the proper feedback.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 168,
      "params": [
        {
          "name": "node",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "dragZone",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getLocation",
        "positionIndicator"
      ],
      "id": "method-onNodeOver",
      "owner": "Ext.grid.header.DropZone",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>status The CSS class that communicates the drop status back to the source so that the\nunderlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a> can be updated</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "template": true,
      "overrides": [
        {
          "name": "onNodeOver",
          "owner": "Ext.dd.DropZone",
          "link": "<a href=\"#!/api/Ext.dd.DropZone-method-onNodeOver\" rel=\"Ext.dd.DropZone-method-onNodeOver\" class=\"docClass\">Ext.dd.DropZone.onNodeOver</a>"
        }
      ],
      "short_doc": "Called while the DropZone determines that a Ext.dd.DragSource is over a drop node\nthat has either been registered or ..."
    },
    {
      "tagname": "method",
      "name": "positionIndicator",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/header/DropZone.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 81,
      "params": [
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "node",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "e",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getBottomIndicator",
        "getLocation",
        "getTopIndicator",
        "invalidateDrop"
      ],
      "id": "method-positionIndicator",
      "owner": "Ext.grid.header.DropZone",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "removeFromGroup",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 717
        }
      ],
      "doc": "<p>Removes this instance from the supplied interaction group</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "sGroup",
          "doc": "<p>The group to drop</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-removeFromGroup",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Removes this instance from the supplied interaction group ..."
    },
    {
      "tagname": "method",
      "name": "removeInvalidHandleClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 172
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-removeInvalidHandleClass",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "removeInvalidHandleClass",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-removeInvalidHandleClass\" rel=\"Ext.dd.DragDrop-method-removeInvalidHandleClass\" class=\"docClass\">Ext.dd.DragDrop.removeInvalidHandleClass</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "removeInvalidHandleId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 177
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-removeInvalidHandleId",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "removeInvalidHandleId",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-removeInvalidHandleId\" rel=\"Ext.dd.DragDrop-method-removeInvalidHandleId\" class=\"docClass\">Ext.dd.DragDrop.removeInvalidHandleId</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "removeInvalidHandleType",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 182
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-removeInvalidHandleType",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "removeInvalidHandleType",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-removeInvalidHandleType\" rel=\"Ext.dd.DragDrop-method-removeInvalidHandleType\" class=\"docClass\">Ext.dd.DragDrop.removeInvalidHandleType</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "resetConstraints",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 122
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-resetConstraints",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "resetConstraints",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-resetConstraints\" rel=\"Ext.dd.DragDrop-method-resetConstraints\" class=\"docClass\">Ext.dd.DragDrop.resetConstraints</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "setDragElId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 142
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setDragElId",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setDragElId",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setDragElId\" rel=\"Ext.dd.DragDrop-method-setDragElId\" class=\"docClass\">Ext.dd.DragDrop.setDragElId</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setHandleElId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 147
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setHandleElId",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setHandleElId",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setHandleElId\" rel=\"Ext.dd.DragDrop-method-setHandleElId\" class=\"docClass\">Ext.dd.DragDrop.setHandleElId</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setInitPosition",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 137
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setInitPosition",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setInitPosition",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setInitPosition\" rel=\"Ext.dd.DragDrop-method-setInitPosition\" class=\"docClass\">Ext.dd.DragDrop.setInitPosition</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setOuterHandleElId",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 152
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setOuterHandleElId",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setOuterHandleElId",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setOuterHandleElId\" rel=\"Ext.dd.DragDrop-method-setOuterHandleElId\" class=\"docClass\">Ext.dd.DragDrop.setOuterHandleElId</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setPadding",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 643
        }
      ],
      "doc": "<p>Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual object size for targeting calculations.\nSupports css-style shorthand; if only one parameter is passed, all sides\nwill have that padding, and if only two are passed, the top and bottom\nwill have the first param, the left and right the second.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Number",
          "name": "iTop",
          "doc": "<p>Top pad</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "iRight",
          "doc": "<p>Right pad</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "iBot",
          "doc": "<p>Bot pad</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        },
        {
          "tagname": "params",
          "type": "Number",
          "name": "iLeft",
          "doc": "<p>Left pad</p>\n",
          "html_type": "<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setPadding",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Configures the padding for the target zone in px. ..."
    },
    {
      "tagname": "method",
      "name": "setStartPosition",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 692
        }
      ],
      "doc": "<p>Sets the start position of the element.  This is set when the obj\nis initialized, the reset when a drag is started.</p>\n",
      "params": [
        {
          "tagname": "params",
          "name": "pos",
          "doc": "<p>current position (from previous lookup)</p>\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "getEl"
      ],
      "id": "method-setStartPosition",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Sets the start position of the element. ..."
    },
    {
      "tagname": "method",
      "name": "setXConstraint",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 112
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setXConstraint",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setXConstraint",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setXConstraint\" rel=\"Ext.dd.DragDrop-method-setXConstraint\" class=\"docClass\">Ext.dd.DragDrop.setXConstraint</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setXTicks",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 928
        }
      ],
      "doc": "<p>Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint().</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "iStartX",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "iTickSize",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setXTicks",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint(). ..."
    },
    {
      "tagname": "method",
      "name": "setYConstraint",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 117
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-setYConstraint",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "setYConstraint",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-setYConstraint\" rel=\"Ext.dd.DragDrop-method-setYConstraint\" class=\"docClass\">Ext.dd.DragDrop.setYConstraint</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "setYTicks",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 957
        }
      ],
      "doc": "<p>Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint().</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "iStartY",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "iTickSize",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setYTicks",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint(). ..."
    },
    {
      "tagname": "method",
      "name": "startDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 62
        }
      ],
      "doc": "<p>Overridden and disabled. A DDTarget does not support being dragged.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-startDrag",
      "owner": "Ext.dd.DDTarget",
      "overrides": [
        {
          "name": "startDrag",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-startDrag\" rel=\"Ext.dd.DragDrop-method-startDrag\" class=\"docClass\">Ext.dd.DragDrop.startDrag</a>"
        }
      ],
      "short_doc": "Overridden and disabled. ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "toString",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DDTarget.js",
          "linenr": 188
        }
      ],
      "doc": "<p>toString method</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 188,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-toString",
      "owner": "Ext.dd.DDTarget",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>string representation of the dd obj</p>\n\n\n\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "overrides": [
        {
          "name": "toString",
          "owner": "Ext.dd.DragDrop",
          "link": "<a href=\"#!/api/Ext.dd.DragDrop-method-toString\" rel=\"Ext.dd.DragDrop-method-toString\" class=\"docClass\">Ext.dd.DragDrop.toString</a>"
        }
      ],
      "short_doc": "toString method ..."
    },
    {
      "tagname": "method",
      "name": "triggerCacheRefresh",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DropZone.js",
          "linenr": 284
        }
      ],
      "doc": "<p>private</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-triggerCacheRefresh",
      "owner": "Ext.dd.DropZone",
      "short_doc": "private ..."
    },
    {
      "tagname": "method",
      "name": "unlock",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 209
        }
      ],
      "doc": "<p>Unlocks this instace</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-unlock",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Unlocks this instace ..."
    },
    {
      "tagname": "method",
      "name": "unreg",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/dd/DragDrop.js",
          "linenr": 771
        }
      ],
      "doc": "<p>Removes all drag and drop hooks for this element</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-unreg",
      "owner": "Ext.dd.DragDrop",
      "short_doc": "Removes all drag and drop hooks for this element ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.grid.header.DropZone"
}