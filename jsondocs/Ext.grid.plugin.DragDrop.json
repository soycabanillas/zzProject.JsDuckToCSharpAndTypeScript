{
  "tagname": "class",
  "name": "Ext.grid.plugin.DragDrop",
  "autodetected": {
    "aliases": true,
    "alternateClassNames": true,
    "extends": true,
    "mixins": true,
    "requires": true,
    "uses": true,
    "members": true,
    "code_type": true
  },
  "files": [
    {
      "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
      "linenr": 21
    }
  ],
  "doc": "<p>This plugin provides drag and/or drop functionality for a <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a>.</p>\n\n<p>It creates a specialized instance of <a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">DragZone</a> which knows how to drag out of a <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a> and loads the data object which is passed to a cooperating <a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">DragZone</a>'s\nmethods with the following properties:</p>\n\n<ul>\n<li><p><code>copy</code> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></p>\n\n<p>The value of the <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a>'s <code>copy</code> property, or <code>true</code> if the GridView was configured with <code>allowCopy: true</code> <em>and</em>\nthe control key was pressed when the drag operation was begun.</p></li>\n<li><p><code>view</code> : <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a></p>\n\n<p>The source GridView from which the drag originated.</p></li>\n<li><p><code>ddel</code> : HtmlElement</p>\n\n<p>The drag proxy element which moves with the mouse</p></li>\n<li><p><code>item</code> : HtmlElement</p>\n\n<p>The GridView node upon which the mousedown event was registered.</p></li>\n<li><p><code>records</code> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></p>\n\n<p>An Array of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>s representing the selected data being dragged from the source <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a>.</p></li>\n</ul>\n\n\n<p>It also creates a specialized instance of <a href=\"#!/api/Ext.dd.DropZone\" rel=\"Ext.dd.DropZone\" class=\"docClass\">Ext.dd.DropZone</a> which cooperates with other DropZones which are\nmembers of the same ddGroup which processes such data objects.</p>\n\n<p>Adding this plugin to a view means that two new events may be fired from the client GridView, <code><a href=\"#!/api/Ext.grid.plugin.DragDrop-event-beforedrop\" rel=\"Ext.grid.plugin.DragDrop-event-beforedrop\" class=\"docClass\">beforedrop</a></code> and <code><a href=\"#!/api/Ext.grid.plugin.DragDrop-event-drop\" rel=\"Ext.grid.plugin.DragDrop-event-drop\" class=\"docClass\">drop</a></code></p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    storeId:'simpsonsStore',\n    fields:['name'],\n    data: [[\"Lisa\"], [\"Bart\"], [\"Homer\"], [\"Marge\"]],\n    proxy: {\n        type: 'memory',\n        reader: 'array'\n    }\n});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    store: 'simpsonsStore',\n    columns: [\n        {header: 'Name',  dataIndex: 'name', flex: true}\n    ],\n    viewConfig: {\n        plugins: {\n            ptype: 'gridviewdragdrop',\n            dragText: 'Drag and drop to reorganize'\n        }\n    },\n    height: 200,\n    width: 400,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n</code></pre>\n",
  "aliases": {
    "plugin": [
      "gridviewdragdrop"
    ]
  },
  "alternateClassNames": [

  ],
  "extends": "Ext.AbstractPlugin",
  "mixins": [

  ],
  "requires": [

  ],
  "uses": [
    "Ext.view.DragZone",
    "Ext.grid.ViewDropZone"
  ],
  "members": [
    {
      "tagname": "cfg",
      "name": "containerScroll",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 232
        }
      ],
      "doc": "<p><code>true</code> to register this container with the Scrollmanager for auto scrolling during drag operations.\nA <a href=\"#!/api/Ext.dd.ScrollManager\" rel=\"Ext.dd.ScrollManager\" class=\"docClass\">Ext.dd.ScrollManager</a> configuration may also be passed.</p>\n",
      "type": "Object/Boolean",
      "default": "false",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-containerScroll",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "true to register this container with the Scrollmanager for auto scrolling during drag operations. ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "ddGroup",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 197
        }
      ],
      "doc": "<p>A named drag drop group to which this object belongs. If a group is specified, then both the DragZones and\nDropZone used by this plugin will only interact with other drag drop objects in the same group.</p>\n",
      "type": "String",
      "default": "\"GridDD\"",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-ddGroup",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "A named drag drop group to which this object belongs. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "dragGroup",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 204
        }
      ],
      "doc": "<p>The <a href=\"#!/api/Ext.grid.plugin.DragDrop-cfg-ddGroup\" rel=\"Ext.grid.plugin.DragDrop-cfg-ddGroup\" class=\"docClass\">ddGroup</a> to which the DragZone will belong.</p>\n\n<p>This defines which other DropZones the DragZone will interact with. Drag/DropZones only interact with other\nDrag/DropZones which are members of the same <a href=\"#!/api/Ext.grid.plugin.DragDrop-cfg-ddGroup\" rel=\"Ext.grid.plugin.DragDrop-cfg-ddGroup\" class=\"docClass\">ddGroup</a>.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-dragGroup",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "The ddGroup to which the DragZone will belong. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "dragText",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 185
        }
      ],
      "doc": "<p>The text to show while dragging.</p>\n\n<p>Two placeholders can be used in the text:</p>\n\n<ul>\n<li><code>{0}</code> The number of selected items.</li>\n<li><code>{1}</code> 's' when more than 1 items (only useful for English).</li>\n</ul>\n\n",
      "type": "String",
      "default": "'{0} selected row{1}'",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-dragText",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "The text to show while dragging. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "dropGroup",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 212
        }
      ],
      "doc": "<p>The <a href=\"#!/api/Ext.grid.plugin.DragDrop-cfg-ddGroup\" rel=\"Ext.grid.plugin.DragDrop-cfg-ddGroup\" class=\"docClass\">ddGroup</a> to which the DropZone will belong.</p>\n\n<p>This defines which other DragZones the DropZone will interact with. Drag/DropZones only interact with other\nDrag/DropZones which are members of the same <a href=\"#!/api/Ext.grid.plugin.DragDrop-cfg-ddGroup\" rel=\"Ext.grid.plugin.DragDrop-cfg-ddGroup\" class=\"docClass\">ddGroup</a>.</p>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-dropGroup",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "The ddGroup to which the DropZone will belong. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "cfg",
      "name": "enableDrag",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 226
        }
      ],
      "doc": "<p><code>false</code> to disallow dragging items from the View.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-enableDrag",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "false to disallow dragging items from the View. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "enableDrop",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "accessor": true,
        "evented": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 220
        }
      ],
      "doc": "<p><code>false</code> to disallow the View from accepting drop gestures.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "accessor": null,
      "evented": null,
      "id": "cfg-enableDrop",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "false to disallow the View from accepting drop gestures. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "cfg",
      "name": "pluginId",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 82
        }
      ],
      "doc": "<p>A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href=\"#!/api/Ext.AbstractComponent-method-getPlugin\" rel=\"Ext.AbstractComponent-method-getPlugin\" class=\"docClass\">getPlugin</a> method.  For example:</p>\n\n<pre><code>var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 2,\n        pluginId: 'cellplugin'\n    }]\n});\n\n// later on:\nvar plugin = grid.getPlugin('cellplugin');\n</code></pre>\n",
      "type": "String",
      "default": null,
      "properties": null,
      "id": "cfg-pluginId",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough getPlugin method. ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "$className",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 763
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "String",
      "default": "'Ext.Base'",
      "readonly": null,
      "id": "property-S-className",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
    },
    {
      "tagname": "property",
      "name": "configMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 772
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-configMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "disabled",
      "autodetected": {
        "tagname": "property",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 41
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 41,
      "type": "Boolean",
      "default": "false",
      "readonly": null,
      "id": "property-disabled",
      "owner": "Ext.AbstractPlugin",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigList",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 769
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "property-initConfigList",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "property",
      "name": "initConfigMap",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 775
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Object",
      "default": "{}",
      "readonly": null,
      "id": "property-initConfigMap",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
    },
    {
      "tagname": "property",
      "name": "isInstance",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 760
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "type": "Boolean",
      "default": "true",
      "readonly": null,
      "id": "property-isInstance",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "isPlugin",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 43
        }
      ],
      "doc": "<p><code>true</code> in this class to identify an object as an instantiated Plugin, or subclass thereof.</p>\n",
      "type": "Boolean",
      "default": "true",
      "properties": null,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-isPlugin",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "true in this class to identify an object as an instantiated Plugin, or subclass thereof. ...",
      "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
    },
    {
      "tagname": "property",
      "name": "self",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1045
        }
      ],
      "doc": "<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n",
      "type": "Ext.Class",
      "default": null,
      "properties": null,
      "protected": true,
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "readonly": null,
      "id": "property-self",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the current class from which this object was instantiated. ...",
      "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
    },
    {
      "tagname": "property",
      "name": "$onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "type": true,
        "default": true,
        "readonly": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 133
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "type": "Array",
      "default": "[]",
      "readonly": null,
      "id": "static-property-S-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ...",
      "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"
    },
    {
      "tagname": "method",
      "name": "constructor",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 49
        }
      ],
      "doc": "<p>Instantiates the plugin.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "optional": true,
          "doc": "<p>Configuration object.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-constructor",
      "owner": "Ext.AbstractPlugin",
      "return": {
        "type": "Ext.AbstractPlugin",
        "doc": "\n",
        "html_type": "<a href=\"#!/api/Ext.AbstractPlugin\" rel=\"Ext.AbstractPlugin\" class=\"docClass\">Ext.AbstractPlugin</a>"
      },
      "short_doc": "Instantiates the plugin. ..."
    },
    {
      "tagname": "method",
      "name": "callOverridden",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1269
        }
      ],
      "doc": "<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the overridden method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "protected": true,
      "deprecated": {
        "text": "<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-callOverridden",
      "owner": "Ext.Base",
      "short_doc": "Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."
    },
    {
      "tagname": "method",
      "name": "callParent",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 846
        }
      ],
      "doc": "<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the parent method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callParent",
      "owner": "Ext.Base",
      "short_doc": "Call the \"parent\" method of the current method. ..."
    },
    {
      "tagname": "method",
      "name": "callSuper",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 961
        }
      ],
      "doc": "<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Array/Arguments",
          "name": "args",
          "doc": "<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"
        }
      ],
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>Returns the result of calling the superclass method</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-callSuper",
      "owner": "Ext.Base",
      "short_doc": "This method is used by an override to call the superclass method but bypass any\noverridden method. ..."
    },
    {
      "tagname": "method",
      "name": "clonePlugin",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 58
        }
      ],
      "doc": "<p>Creates clone of the plugin.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "overrideCfg",
          "optional": true,
          "doc": "<p>Additional config for the derived plugin.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-clonePlugin",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "Creates clone of the plugin. ..."
    },
    {
      "tagname": "method",
      "name": "configClass",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 766
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-configClass",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "destroy",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 243
        }
      ],
      "doc": "<p>AbstractComponent calls destroy on all its plugins at destroy time.</p>\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-destroy",
      "owner": "Ext.grid.plugin.DragDrop",
      "overrides": [
        {
          "name": "destroy",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>"
        }
      ],
      "short_doc": "AbstractComponent calls destroy on all its plugins at destroy time. ..."
    },
    {
      "tagname": "method",
      "name": "disable",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 262
        }
      ],
      "doc": "<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 262,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent"
      ],
      "id": "method-disable",
      "owner": "Ext.grid.plugin.DragDrop",
      "overrides": [
        {
          "name": "disable",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-disable\" rel=\"Ext.AbstractPlugin-method-disable\" class=\"docClass\">Ext.AbstractPlugin.disable</a>"
        }
      ],
      "short_doc": "The base implementation just sets the plugin's disabled flag to true\n\nPlugin subclasses which need more complex proce..."
    },
    {
      "tagname": "method",
      "name": "enable",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 251
        }
      ],
      "doc": "<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 251,
      "params": [

      ],
      "chainable": false,
      "fires": [

      ],
      "method_calls": [
        "callParent"
      ],
      "id": "method-enable",
      "owner": "Ext.grid.plugin.DragDrop",
      "overrides": [
        {
          "name": "enable",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-enable\" rel=\"Ext.AbstractPlugin-method-enable\" class=\"docClass\">Ext.AbstractPlugin.enable</a>"
        }
      ],
      "short_doc": "The base implementation just sets the plugin's disabled flag to false\n\nPlugin subclasses which need more complex proc..."
    },
    {
      "tagname": "method",
      "name": "getCmp",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 74
        }
      ],
      "doc": "<p>Returns the component to which this plugin is attached.</p>\n",
      "return": {
        "type": "Ext.Component",
        "name": "return",
        "doc": "<p>Owner component.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getCmp",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "Returns the component to which this plugin is attached. ..."
    },
    {
      "tagname": "method",
      "name": "getConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1196
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getInitialConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1206
        }
      ],
      "doc": "<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String",
          "name": "name",
          "optional": true,
          "doc": "<p>Name of the config option to return.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Object/Mixed",
        "name": "return",
        "doc": "<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-getInitialConfig",
      "owner": "Ext.Base",
      "short_doc": "Returns the initial configuration passed to constructor when instantiating\nthis class. ..."
    },
    {
      "tagname": "method",
      "name": "hasConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1156
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-hasConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "init",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 239
        }
      ],
      "doc": "<p>The init method is invoked after initComponent method has been run for the client Component.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin initialization, and set up bidirectional\nlinks between the plugin and its client Component in their own implementation of this method.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": 239,
      "params": [
        {
          "name": "view",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "method-init",
      "owner": "Ext.grid.plugin.DragDrop",
      "overrides": [
        {
          "name": "init",
          "owner": "Ext.AbstractPlugin",
          "link": "<a href=\"#!/api/Ext.AbstractPlugin-method-init\" rel=\"Ext.AbstractPlugin-method-init\" class=\"docClass\">Ext.AbstractPlugin.init</a>"
        }
      ],
      "short_doc": "The init method is invoked after initComponent method has been run for the client Component. ..."
    },
    {
      "tagname": "method",
      "name": "initConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1090
        }
      ],
      "doc": "<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n",
      "protected": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "config",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-initConfig",
      "owner": "Ext.Base",
      "short_doc": "Initialize configuration for this class. ..."
    },
    {
      "tagname": "method",
      "name": "onClassExtended",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 136
        }
      ],
      "doc": "<p>Private.\nInject a ptype property so that AbstractComponent.findPlugin(ptype) works.</p>\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "cls",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "data",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "hooks",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onClassExtended",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "Private. ..."
    },
    {
      "tagname": "method",
      "name": "onConfigUpdate",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1224
        }
      ],
      "doc": "\n",
      "private": true,
      "params": [
        {
          "tagname": "params",
          "name": "names",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "callback",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "scope",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onConfigUpdate",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "onViewRender",
      "autodetected": {
        "tagname": "method",
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 273
        }
      ],
      "doc": "\n",
      "inheritdoc": null,
      "static": null,
      "private": true,
      "inheritable": null,
      "linenr": 273,
      "params": [
        {
          "name": "view",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-onViewRender",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "setCmp",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/AbstractPlugin.js",
          "linenr": 66
        }
      ],
      "doc": "<p>Sets the component to which this plugin is attached.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Component",
          "name": "cmp",
          "doc": "<p>Owner component.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"
        }
      ],
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-setCmp",
      "owner": "Ext.AbstractPlugin",
      "short_doc": "Sets the component to which this plugin is attached. ..."
    },
    {
      "tagname": "method",
      "name": "setConfig",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 1164
        }
      ],
      "doc": "\n",
      "private": true,
      "inheritdoc": null,
      "static": null,
      "inheritable": null,
      "linenr": null,
      "params": [
        {
          "name": "config",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "applyIfNotSet",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "method-setConfig",
      "owner": "Ext.Base",
      "return": {
        "type": "Ext.Base",
        "doc": "<p>this</p>\n",
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "statics",
      "autodetected": {
        "inheritdoc": true,
        "static": true,
        "private": true,
        "inheritable": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 778
        }
      ],
      "doc": "<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n",
      "protected": true,
      "return": {
        "type": "Ext.Class",
        "name": "return",
        "doc": "\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"
      },
      "inheritdoc": null,
      "static": null,
      "private": null,
      "inheritable": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "method-statics",
      "owner": "Ext.Base",
      "short_doc": "Get the reference to the class from which this object was instantiated. ..."
    },
    {
      "tagname": "method",
      "name": "addConfig",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 176
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addConfig",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addInheritableStatics",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 256
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addInheritableStatics",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMember",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 353
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "name",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "member",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMember",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "addMembers",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 296
        }
      ],
      "doc": "<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addMembers",
      "owner": "Ext.Base",
      "short_doc": "Add methods / properties to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addStatics",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 218
        }
      ],
      "doc": "<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addStatics",
      "owner": "Ext.Base",
      "short_doc": "Add / override static properties of this class. ..."
    },
    {
      "tagname": "method",
      "name": "addXtype",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 730
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "xtype",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-addXtype",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "borrow",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 383
        }
      ],
      "doc": "<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Ext.Base",
          "name": "fromClass",
          "doc": "<p>The class to borrow members from</p>\n",
          "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
        },
        {
          "tagname": "params",
          "type": "Array/String",
          "name": "members",
          "doc": "<p>The names of the members to borrow</p>\n",
          "html_type": "<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "private": true,
      "inheritdoc": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-borrow",
      "owner": "Ext.Base",
      "short_doc": "Borrow another class' members to the prototype of this class. ..."
    },
    {
      "tagname": "method",
      "name": "create",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 60
        }
      ],
      "doc": "<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n",
      "return": {
        "type": "Object",
        "name": "return",
        "doc": "<p>the created instance.</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-create",
      "owner": "Ext.Base",
      "overrides": [
        {
          "name": "create",
          "owner": "Ext.layout.Layout",
          "link": "<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>"
        }
      ],
      "short_doc": "Create a new instance of this Class. ..."
    },
    {
      "tagname": "method",
      "name": "createAlias",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 696
        }
      ],
      "doc": "<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n",
      "params": [
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "alias",
          "doc": "<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "String/Object",
          "name": "origin",
          "doc": "<p>The original method name</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": null,
      "fires": null,
      "method_calls": null,
      "id": "static-method-createAlias",
      "owner": "Ext.Base",
      "short_doc": "Create aliases for existing prototype methods. ..."
    },
    {
      "tagname": "method",
      "name": "extend",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 81
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "params": [
        {
          "tagname": "params",
          "name": "config",
          "doc": "\n",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "inheritdoc": null,
      "linenr": null,
      "chainable": false,
      "fires": null,
      "method_calls": [
        "hasOwnProperty"
      ],
      "id": "static-method-extend",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "getName",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 677
        }
      ],
      "doc": "<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n",
      "return": {
        "type": "String",
        "name": "return",
        "doc": "<p>className</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
      },
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-getName",
      "owner": "Ext.Base",
      "short_doc": "Get the current class' name in string format. ..."
    },
    {
      "tagname": "method",
      "name": "implement",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 373
        }
      ],
      "doc": "<p>Adds members to class.</p>\n",
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n",
        "version": "4.1"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-implement",
      "owner": "Ext.Base",
      "short_doc": "Adds members to class. ..."
    },
    {
      "tagname": "method",
      "name": "mixin",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 595
        }
      ],
      "doc": "<p>Used internally by the mixins pre-processor</p>\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "name",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "mixinClass",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": false,
      "fires": null,
      "method_calls": [
        "addConfig",
        "hasOwnProperty"
      ],
      "id": "static-method-mixin",
      "owner": "Ext.Base",
      "short_doc": "Used internally by the mixins pre-processor ..."
    },
    {
      "tagname": "method",
      "name": "onExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 162
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [
        {
          "name": "fn",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "name": "scope",
          "type": "Object",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "chainable": true,
      "fires": null,
      "method_calls": null,
      "id": "static-method-onExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "method",
      "name": "override",
      "autodetected": {
        "inheritdoc": true,
        "private": true,
        "linenr": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 452
        }
      ],
      "doc": "<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "Object",
          "name": "members",
          "doc": "<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "return": {
        "type": "Ext.Base",
        "name": "return",
        "doc": "<p>this class</p>\n",
        "properties": null,
        "html_type": "<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"
      },
      "static": true,
      "inheritable": true,
      "deprecated": {
        "text": "<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n",
        "version": "4.1.0"
      },
      "inheritdoc": null,
      "private": null,
      "linenr": null,
      "chainable": true,
      "fires": null,
      "method_calls": [
        "addConfig",
        "addInheritableStatics"
      ],
      "id": "static-method-override",
      "owner": "Ext.Base",
      "short_doc": "Override members of this class. ..."
    },
    {
      "tagname": "method",
      "name": "triggerExtended",
      "autodetected": {
        "inheritdoc": true,
        "linenr": true,
        "params": true,
        "chainable": true,
        "fires": true,
        "method_calls": true
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/class/Base.js",
          "linenr": 140
        }
      ],
      "doc": "\n",
      "private": true,
      "static": true,
      "inheritable": true,
      "inheritdoc": null,
      "linenr": null,
      "params": [

      ],
      "chainable": false,
      "fires": null,
      "method_calls": null,
      "id": "static-method-triggerExtended",
      "owner": "Ext.Base",
      "short_doc": " ..."
    },
    {
      "tagname": "event",
      "name": "beforedrop",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 91
        }
      ],
      "doc": "<p><strong>This event is fired through the GridView. Add listeners to the <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a> object</strong></p>\n\n<p>Fired when a drop gesture has been triggered by a mouseup event in a valid drop position in the GridView.</p>\n\n<p>Returning <code>false</code> to this event signals that the drop gesture was invalid, and if the drag proxy will animate\nback to the point from which the drag began.</p>\n\n<p>The dropHandlers parameter can be used to defer the processing of this event. For example to wait for the result of\na message box confirmation or an asynchronous server call. See the details of this property for more information.</p>\n\n<pre class='inline-example '><code>view.on('beforedrop', function(node, data, overModel, dropPosition, dropHandlers) {\n    // Defer the handling\n    dropHandlers.wait = true;\n    <a href=\"#!/api/Ext.MessageBox-method-confirm\" rel=\"Ext.MessageBox-method-confirm\" class=\"docClass\">Ext.MessageBox.confirm</a>('Drop', 'Are you sure', function(btn){\n        if (btn === 'yes') {\n            dropHandlers.processDrop();\n        } else {\n            dropHandlers.cancelDrop();\n        }\n    });\n});\n</code></pre>\n\n<p>Any other return value continues with the data transfer operation, unless the wait property is set.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "node",
          "doc": "<p>The <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a> node <strong>if any</strong> over which the mouse was positioned.</p>\n\n<p>Any other return value continues with the data transfer operation.</p>\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>The data object gathered at mousedown time by the cooperating\n<a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">DragZone</a>'s <a href=\"#!/api/Ext.dd.DragZone-method-getDragData\" rel=\"Ext.dd.DragZone-method-getDragData\" class=\"docClass\">getDragData</a> method it contains the following\nproperties:</p>\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "copy",
              "doc": "<p>The value of the GridView's <code>copy</code> property, or <code>true</code> if the GridView was configured with\n<code>allowCopy: true</code> and the control key was pressed when the drag operation was begun</p>\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Ext.grid.View",
              "name": "view",
              "doc": "<p>The source GridView from which the drag originated.</p>\n",
              "html_type": "<a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">Ext.grid.View</a>"
            },
            {
              "tagname": "params",
              "type": "HTMLElement",
              "name": "ddel",
              "doc": "<p>The drag proxy element which moves with the mouse</p>\n",
              "html_type": "HTMLElement"
            },
            {
              "tagname": "params",
              "type": "HTMLElement",
              "name": "item",
              "doc": "<p>The GridView node upon which the mousedown event was registered.</p>\n",
              "html_type": "HTMLElement"
            },
            {
              "tagname": "params",
              "type": "Ext.data.Model[]",
              "name": "records",
              "doc": "<p>An Array of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>s representing the selected data being\ndragged from the source GridView.</p>\n",
              "html_type": "<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.Model",
          "name": "overModel",
          "doc": "<p>The Model over which the drop gesture took place.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "dropPosition",
          "doc": "<p><code>\"before\"</code> or <code>\"after\"</code> depending on whether the mouse is above or below the midline\nof the node.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "dropHandlers",
          "doc": "<p>This parameter allows the developer to control when the drop action takes place. It is useful if any asynchronous\nprocessing needs to be completed before performing the drop. This object has the following properties:</p>\n",
          "properties": [
            {
              "tagname": "params",
              "type": "Boolean",
              "name": "wait",
              "doc": "<p>Indicates whether the drop should be deferred. Set this property to true to defer the drop.</p>\n",
              "html_type": "<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"
            },
            {
              "tagname": "params",
              "type": "Function",
              "name": "processDrop",
              "doc": "<p>A function to be called to complete the drop operation.</p>\n",
              "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
            },
            {
              "tagname": "params",
              "type": "Function",
              "name": "cancelDrop",
              "doc": "<p>A function to be called to cancel the drop operation.</p>\n",
              "html_type": "<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"
            }
          ],
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-beforedrop",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "This event is fired through the GridView. ..."
    },
    {
      "tagname": "event",
      "name": "drop",
      "autodetected": {
      },
      "files": [
        {
          "filename": "D:/Backup/Alex 20120520/ExtJS.Net/Sencha/ext-4.2.1-gpl/ext-4.2.1.883/src/grid/plugin/DragDrop.js",
          "linenr": 147
        }
      ],
      "doc": "<p><strong>This event is fired through the GridView. Add listeners to the GridView object</strong> Fired when a drop operation\nhas been completed and the data has been moved or copied.</p>\n",
      "params": [
        {
          "tagname": "params",
          "type": "HTMLElement",
          "name": "node",
          "doc": "<p>The GridView node <strong>if any</strong> over which the mouse was positioned.</p>\n",
          "html_type": "HTMLElement"
        },
        {
          "tagname": "params",
          "type": "Object",
          "name": "data",
          "doc": "<p>The data object gathered at mousedown time by the cooperating <a href=\"#!/api/Ext.dd.DragZone\" rel=\"Ext.dd.DragZone\" class=\"docClass\">DragZone</a>'s <a href=\"#!/api/Ext.dd.DragZone-method-getDragData\" rel=\"Ext.dd.DragZone-method-getDragData\" class=\"docClass\">getDragData</a> method it contains the following properties:</p>\n\n<ul>\n<li><p><code>copy</code> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></p>\n\n<p>The value of the GridView's <code>copy</code> property, or <code>true</code> if the GridView was configured with <code>allowCopy: true</code> and\nthe control key was pressed when the drag operation was begun</p></li>\n<li><p><code>view</code> : <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a></p>\n\n<p>The source GridView from which the drag originated.</p></li>\n<li><p><code>ddel</code> : HtmlElement</p>\n\n<p>The drag proxy element which moves with the mouse</p></li>\n<li><p><code>item</code> : HtmlElement</p>\n\n<p>The <a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a><a href=\"#!/api/Ext.grid.View\" rel=\"Ext.grid.View\" class=\"docClass\">GridView</a> node upon which the mousedown event was registered.</p></li>\n<li><p><code>records</code> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></p>\n\n<p>An Array of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>s representing the selected data being dragged from the source GridView.</p></li>\n</ul>\n\n",
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        },
        {
          "tagname": "params",
          "type": "Ext.data.Model",
          "name": "overModel",
          "doc": "<p>The Model over which the drop gesture took place.</p>\n",
          "html_type": "<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"
        },
        {
          "tagname": "params",
          "type": "String",
          "name": "dropPosition",
          "doc": "<p><code>\"before\"</code> or <code>\"after\"</code> depending on whether the mouse is above or below the midline\nof the node.</p>\n",
          "html_type": "<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"
        },
        {
          "tagname": "params",
          "name": "eOpts",
          "type": "Object",
          "doc": "<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n",
          "ext4_auto_param": true,
          "html_type": "<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"
        }
      ],
      "id": "event-drop",
      "owner": "Ext.grid.plugin.DragDrop",
      "short_doc": "This event is fired through the GridView. ..."
    }
  ],
  "code_type": "ext_define",
  "id": "class-Ext.grid.plugin.DragDrop",
  "short_doc": "This plugin provides drag and/or drop functionality for a GridView. ..."
}